
// Package slot is generated by gogll. Do not edit. 
package slot

import(
	"bytes"
	"fmt"
	
	"eggr/parser/symbols"
	"eggr/token"
)

type Label int

const(
	AND0R0 Label = iota
	AND0R1
	AND0R2
	ANY0R0
	ANY0R1
	ANY0R2
	CLOSE0R0
	CLOSE0R1
	CLOSE0R2
	CharClass0R0
	CharClass0R1
	CharClass0R2
	CharClass0R3
	CharClass0R4
	CharLiteral0R0
	CharLiteral0R1
	CharLiteral0R2
	CharLiteral0R3
	Character0R0
	Character0R1
	Character1R0
	Character1R1
	Choice0R0
	Choice0R1
	Choice0R2
	EMPTY0R0
	EMPTY0R1
	EMPTY0R2
	EQUAL0R0
	EQUAL0R1
	EQUAL0R2
	Expression0R0
	Expression0R1
	Expression0R2
	Expression1R0
	Expression1R1
	Expression1R2
	Expression2R0
	Expression2R1
	Expression2R2
	Grammar0R0
	Grammar0R1
	Grammar0R2
	Grammar0R3
	Identifier0R0
	Identifier0R1
	Identifier0R2
	Identifier0R3
	LetOrNum0R0
	LetOrNum0R1
	LetOrNum1R0
	LetOrNum1R1
	LetOrNum2R0
	LetOrNum2R1
	LetOrNum0x0R0
	LetOrNum0x0R1
	LetOrNum0x0R2
	LetOrNum0x1R0
	LetOrNum0x1R1
	LetWS0R0
	LetWS0R1
	LetWS1R0
	LetWS1R1
	LineOrBlock0R0
	LineOrBlock0R1
	LineOrBlock1R0
	LineOrBlock1R1
	NEQUAL0R0
	NEQUAL0R1
	NEQUAL0R2
	NOT0R0
	NOT0R1
	NOT0R2
	OPEN0R0
	OPEN0R1
	OPEN0R2
	OPT0R0
	OPT0R1
	OPT0R2
	OptStarPlus0R0
	OptStarPlus0R1
	OptStarPlus1R0
	OptStarPlus1R1
	OptStarPlus2R0
	OptStarPlus2R1
	OptStarPlus3R0
	PIPE0R0
	PIPE0R1
	PIPE0R2
	PLUS0R0
	PLUS0R1
	PLUS0R2
	Primary0R0
	Primary0R1
	Primary0R2
	Primary1R0
	Primary1R1
	Primary1R2
	Primary1R3
	Primary2R0
	Primary2R1
	Primary3R0
	Primary3R1
	Primary4R0
	Primary4R1
	Primary5R0
	Primary5R1
	Primary6R0
	Primary6R1
	RepExpr0x0R0
	RepExpr0x0R1
	RepExpr0x0R2
	RepExpr0x1R0
	RepPipedSeq0x0R0
	RepPipedSeq0x0R1
	RepPipedSeq0x0R2
	RepPipedSeq0x0R3
	RepPipedSeq0x1R0
	RepRule0x0R0
	RepRule0x0R1
	RepRule0x0R2
	RepRule0x1R0
	Rule0R0
	Rule0R1
	Rule0R2
	Rule0R3
	STAR0R0
	STAR0R1
	STAR0R2
	Sequence0R0
	Sequence0R1
	Sequence0R2
	SpaceOrComment0R0
	SpaceOrComment0R1
	SpaceOrComment1R0
	SpaceOrComment1R1
	String0R0
	String0R1
	String0R2
	String1R0
	StringLiteral0R0
	StringLiteral0R1
	StringLiteral0R2
	StringLiteral0R3
	StringLiteral0R4
	UnclosedChar0R0
	UnclosedChar0R1
	UnclosedChar0R2
	UnclosedChars0R0
	UnclosedChars0R1
	UnclosedChars0R2
	UnclosedChars1R0
	WS0R0
	WS0R1
	WS0R2
	WS1R0
	WS1R1
)

type Slot struct {
	NT      symbols.NT
	Alt     int
	Pos     int
	Symbols symbols.Symbols
	Label 	Label
}

type Index struct {
	NT      symbols.NT
	Alt     int
	Pos     int
}

func GetAlternates(nt symbols.NT) []Label {
	alts, exist := alternates[nt]
	if !exist {
		panic(fmt.Sprintf("Invalid NT %s", nt))
	}
	return alts
}

func GetLabel(nt symbols.NT, alt, pos int) Label {
	l, exist := slotIndex[Index{nt,alt,pos}]
	if exist {
		return l
	}
	panic(fmt.Sprintf("Error: no slot label for NT=%s, alt=%d, pos=%d", nt, alt, pos))
}

func (l Label) EoR() bool {
	return l.Slot().EoR()
}

func (l Label) Head() symbols.NT {
	return l.Slot().NT
}

func (l Label) Index() Index {
	s := l.Slot()
	return Index{s.NT, s.Alt, s.Pos}
}

func (l Label) Alternate() int {
	return l.Slot().Alt
}

func (l Label) Pos() int {
	return l.Slot().Pos
}

func (l Label) Slot() *Slot {
	s, exist := slots[l]
	if !exist {
		panic(fmt.Sprintf("Invalid slot label %d", l))
	}
	return s
}

func (l Label) String() string {
	return l.Slot().String()
}

func (l Label) Symbols() symbols.Symbols {
	return l.Slot().Symbols
}

func (l Label) IsNullable() bool {
	return nullable[l]
}

func (l Label) FirstContains(typ token.Type) bool {
	return firstT[l][typ]
}

func (s *Slot) EoR() bool {
	return s.Pos >= len(s.Symbols)
}

func (s *Slot) Successor() *Slot {
	if s.EoR() {
		return nil
	} else {
		// TODO try slots[s.Label + 1]
		return slots[slotIndex[Index{s.NT,s.Alt,s.Pos+1}]]
	}
}

func (s *Slot) String() string {
	buf := new(bytes.Buffer)
	fmt.Fprintf(buf, "%s : ", s.NT)
	for i, sym := range s.Symbols {
		if i == s.Pos {
			fmt.Fprintf(buf, "∙")
		}
		fmt.Fprintf(buf, "%s ", sym)
	}
	if s.Pos >= len(s.Symbols) {
		fmt.Fprintf(buf, "∙")
	}
	return buf.String()
}

var slots = map[Label]*Slot{ 
	AND0R0: {
		symbols.NT_AND, 0, 0, 
		symbols.Symbols{  
			symbols.T_1, 
			symbols.NT_WS,
		}, 
		AND0R0, 
	},
	AND0R1: {
		symbols.NT_AND, 0, 1, 
		symbols.Symbols{  
			symbols.T_1, 
			symbols.NT_WS,
		}, 
		AND0R1, 
	},
	AND0R2: {
		symbols.NT_AND, 0, 2, 
		symbols.Symbols{  
			symbols.T_1, 
			symbols.NT_WS,
		}, 
		AND0R2, 
	},
	ANY0R0: {
		symbols.NT_ANY, 0, 0, 
		symbols.Symbols{  
			symbols.T_5, 
			symbols.NT_WS,
		}, 
		ANY0R0, 
	},
	ANY0R1: {
		symbols.NT_ANY, 0, 1, 
		symbols.Symbols{  
			symbols.T_5, 
			symbols.NT_WS,
		}, 
		ANY0R1, 
	},
	ANY0R2: {
		symbols.NT_ANY, 0, 2, 
		symbols.Symbols{  
			symbols.T_5, 
			symbols.NT_WS,
		}, 
		ANY0R2, 
	},
	CLOSE0R0: {
		symbols.NT_CLOSE, 0, 0, 
		symbols.Symbols{  
			symbols.T_2, 
			symbols.NT_WS,
		}, 
		CLOSE0R0, 
	},
	CLOSE0R1: {
		symbols.NT_CLOSE, 0, 1, 
		symbols.Symbols{  
			symbols.T_2, 
			symbols.NT_WS,
		}, 
		CLOSE0R1, 
	},
	CLOSE0R2: {
		symbols.NT_CLOSE, 0, 2, 
		symbols.Symbols{  
			symbols.T_2, 
			symbols.NT_WS,
		}, 
		CLOSE0R2, 
	},
	CharClass0R0: {
		symbols.NT_CharClass, 0, 0, 
		symbols.Symbols{  
			symbols.T_9, 
			symbols.NT_UnclosedChars, 
			symbols.T_10, 
			symbols.NT_WS,
		}, 
		CharClass0R0, 
	},
	CharClass0R1: {
		symbols.NT_CharClass, 0, 1, 
		symbols.Symbols{  
			symbols.T_9, 
			symbols.NT_UnclosedChars, 
			symbols.T_10, 
			symbols.NT_WS,
		}, 
		CharClass0R1, 
	},
	CharClass0R2: {
		symbols.NT_CharClass, 0, 2, 
		symbols.Symbols{  
			symbols.T_9, 
			symbols.NT_UnclosedChars, 
			symbols.T_10, 
			symbols.NT_WS,
		}, 
		CharClass0R2, 
	},
	CharClass0R3: {
		symbols.NT_CharClass, 0, 3, 
		symbols.Symbols{  
			symbols.T_9, 
			symbols.NT_UnclosedChars, 
			symbols.T_10, 
			symbols.NT_WS,
		}, 
		CharClass0R3, 
	},
	CharClass0R4: {
		symbols.NT_CharClass, 0, 4, 
		symbols.Symbols{  
			symbols.T_9, 
			symbols.NT_UnclosedChars, 
			symbols.T_10, 
			symbols.NT_WS,
		}, 
		CharClass0R4, 
	},
	CharLiteral0R0: {
		symbols.NT_CharLiteral, 0, 0, 
		symbols.Symbols{  
			symbols.T_21, 
			symbols.NT_Character, 
			symbols.T_21,
		}, 
		CharLiteral0R0, 
	},
	CharLiteral0R1: {
		symbols.NT_CharLiteral, 0, 1, 
		symbols.Symbols{  
			symbols.T_21, 
			symbols.NT_Character, 
			symbols.T_21,
		}, 
		CharLiteral0R1, 
	},
	CharLiteral0R2: {
		symbols.NT_CharLiteral, 0, 2, 
		symbols.Symbols{  
			symbols.T_21, 
			symbols.NT_Character, 
			symbols.T_21,
		}, 
		CharLiteral0R2, 
	},
	CharLiteral0R3: {
		symbols.NT_CharLiteral, 0, 3, 
		symbols.Symbols{  
			symbols.T_21, 
			symbols.NT_Character, 
			symbols.T_21,
		}, 
		CharLiteral0R3, 
	},
	Character0R0: {
		symbols.NT_Character, 0, 0, 
		symbols.Symbols{  
			symbols.T_18,
		}, 
		Character0R0, 
	},
	Character0R1: {
		symbols.NT_Character, 0, 1, 
		symbols.Symbols{  
			symbols.T_18,
		}, 
		Character0R1, 
	},
	Character1R0: {
		symbols.NT_Character, 1, 0, 
		symbols.Symbols{  
			symbols.T_14,
		}, 
		Character1R0, 
	},
	Character1R1: {
		symbols.NT_Character, 1, 1, 
		symbols.Symbols{  
			symbols.T_14,
		}, 
		Character1R1, 
	},
	Choice0R0: {
		symbols.NT_Choice, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Sequence, 
			symbols.NT_RepPipedSeq0x,
		}, 
		Choice0R0, 
	},
	Choice0R1: {
		symbols.NT_Choice, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Sequence, 
			symbols.NT_RepPipedSeq0x,
		}, 
		Choice0R1, 
	},
	Choice0R2: {
		symbols.NT_Choice, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Sequence, 
			symbols.NT_RepPipedSeq0x,
		}, 
		Choice0R2, 
	},
	EMPTY0R0: {
		symbols.NT_EMPTY, 0, 0, 
		symbols.Symbols{  
			symbols.T_6, 
			symbols.NT_WS,
		}, 
		EMPTY0R0, 
	},
	EMPTY0R1: {
		symbols.NT_EMPTY, 0, 1, 
		symbols.Symbols{  
			symbols.T_6, 
			symbols.NT_WS,
		}, 
		EMPTY0R1, 
	},
	EMPTY0R2: {
		symbols.NT_EMPTY, 0, 2, 
		symbols.Symbols{  
			symbols.T_6, 
			symbols.NT_WS,
		}, 
		EMPTY0R2, 
	},
	EQUAL0R0: {
		symbols.NT_EQUAL, 0, 0, 
		symbols.Symbols{  
			symbols.T_7, 
			symbols.NT_WS,
		}, 
		EQUAL0R0, 
	},
	EQUAL0R1: {
		symbols.NT_EQUAL, 0, 1, 
		symbols.Symbols{  
			symbols.T_7, 
			symbols.NT_WS,
		}, 
		EQUAL0R1, 
	},
	EQUAL0R2: {
		symbols.NT_EQUAL, 0, 2, 
		symbols.Symbols{  
			symbols.T_7, 
			symbols.NT_WS,
		}, 
		EQUAL0R2, 
	},
	Expression0R0: {
		symbols.NT_Expression, 0, 0, 
		symbols.Symbols{  
			symbols.NT_AND, 
			symbols.NT_Primary,
		}, 
		Expression0R0, 
	},
	Expression0R1: {
		symbols.NT_Expression, 0, 1, 
		symbols.Symbols{  
			symbols.NT_AND, 
			symbols.NT_Primary,
		}, 
		Expression0R1, 
	},
	Expression0R2: {
		symbols.NT_Expression, 0, 2, 
		symbols.Symbols{  
			symbols.NT_AND, 
			symbols.NT_Primary,
		}, 
		Expression0R2, 
	},
	Expression1R0: {
		symbols.NT_Expression, 1, 0, 
		symbols.Symbols{  
			symbols.NT_NOT, 
			symbols.NT_Primary,
		}, 
		Expression1R0, 
	},
	Expression1R1: {
		symbols.NT_Expression, 1, 1, 
		symbols.Symbols{  
			symbols.NT_NOT, 
			symbols.NT_Primary,
		}, 
		Expression1R1, 
	},
	Expression1R2: {
		symbols.NT_Expression, 1, 2, 
		symbols.Symbols{  
			symbols.NT_NOT, 
			symbols.NT_Primary,
		}, 
		Expression1R2, 
	},
	Expression2R0: {
		symbols.NT_Expression, 2, 0, 
		symbols.Symbols{  
			symbols.NT_Primary, 
			symbols.NT_OptStarPlus,
		}, 
		Expression2R0, 
	},
	Expression2R1: {
		symbols.NT_Expression, 2, 1, 
		symbols.Symbols{  
			symbols.NT_Primary, 
			symbols.NT_OptStarPlus,
		}, 
		Expression2R1, 
	},
	Expression2R2: {
		symbols.NT_Expression, 2, 2, 
		symbols.Symbols{  
			symbols.NT_Primary, 
			symbols.NT_OptStarPlus,
		}, 
		Expression2R2, 
	},
	Grammar0R0: {
		symbols.NT_Grammar, 0, 0, 
		symbols.Symbols{  
			symbols.NT_WS, 
			symbols.NT_Rule, 
			symbols.NT_RepRule0x,
		}, 
		Grammar0R0, 
	},
	Grammar0R1: {
		symbols.NT_Grammar, 0, 1, 
		symbols.Symbols{  
			symbols.NT_WS, 
			symbols.NT_Rule, 
			symbols.NT_RepRule0x,
		}, 
		Grammar0R1, 
	},
	Grammar0R2: {
		symbols.NT_Grammar, 0, 2, 
		symbols.Symbols{  
			symbols.NT_WS, 
			symbols.NT_Rule, 
			symbols.NT_RepRule0x,
		}, 
		Grammar0R2, 
	},
	Grammar0R3: {
		symbols.NT_Grammar, 0, 3, 
		symbols.Symbols{  
			symbols.NT_WS, 
			symbols.NT_Rule, 
			symbols.NT_RepRule0x,
		}, 
		Grammar0R3, 
	},
	Identifier0R0: {
		symbols.NT_Identifier, 0, 0, 
		symbols.Symbols{  
			symbols.NT_LetWS, 
			symbols.NT_LetOrNum0x, 
			symbols.NT_WS,
		}, 
		Identifier0R0, 
	},
	Identifier0R1: {
		symbols.NT_Identifier, 0, 1, 
		symbols.Symbols{  
			symbols.NT_LetWS, 
			symbols.NT_LetOrNum0x, 
			symbols.NT_WS,
		}, 
		Identifier0R1, 
	},
	Identifier0R2: {
		symbols.NT_Identifier, 0, 2, 
		symbols.Symbols{  
			symbols.NT_LetWS, 
			symbols.NT_LetOrNum0x, 
			symbols.NT_WS,
		}, 
		Identifier0R2, 
	},
	Identifier0R3: {
		symbols.NT_Identifier, 0, 3, 
		symbols.Symbols{  
			symbols.NT_LetWS, 
			symbols.NT_LetOrNum0x, 
			symbols.NT_WS,
		}, 
		Identifier0R3, 
	},
	LetOrNum0R0: {
		symbols.NT_LetOrNum, 0, 0, 
		symbols.Symbols{  
			symbols.T_15,
		}, 
		LetOrNum0R0, 
	},
	LetOrNum0R1: {
		symbols.NT_LetOrNum, 0, 1, 
		symbols.Symbols{  
			symbols.T_15,
		}, 
		LetOrNum0R1, 
	},
	LetOrNum1R0: {
		symbols.NT_LetOrNum, 1, 0, 
		symbols.Symbols{  
			symbols.T_20,
		}, 
		LetOrNum1R0, 
	},
	LetOrNum1R1: {
		symbols.NT_LetOrNum, 1, 1, 
		symbols.Symbols{  
			symbols.T_20,
		}, 
		LetOrNum1R1, 
	},
	LetOrNum2R0: {
		symbols.NT_LetOrNum, 2, 0, 
		symbols.Symbols{  
			symbols.NT_WS,
		}, 
		LetOrNum2R0, 
	},
	LetOrNum2R1: {
		symbols.NT_LetOrNum, 2, 1, 
		symbols.Symbols{  
			symbols.NT_WS,
		}, 
		LetOrNum2R1, 
	},
	LetOrNum0x0R0: {
		symbols.NT_LetOrNum0x, 0, 0, 
		symbols.Symbols{  
			symbols.NT_LetOrNum, 
			symbols.NT_LetOrNum0x,
		}, 
		LetOrNum0x0R0, 
	},
	LetOrNum0x0R1: {
		symbols.NT_LetOrNum0x, 0, 1, 
		symbols.Symbols{  
			symbols.NT_LetOrNum, 
			symbols.NT_LetOrNum0x,
		}, 
		LetOrNum0x0R1, 
	},
	LetOrNum0x0R2: {
		symbols.NT_LetOrNum0x, 0, 2, 
		symbols.Symbols{  
			symbols.NT_LetOrNum, 
			symbols.NT_LetOrNum0x,
		}, 
		LetOrNum0x0R2, 
	},
	LetOrNum0x1R0: {
		symbols.NT_LetOrNum0x, 1, 0, 
		symbols.Symbols{  
			symbols.NT_EMPTY,
		}, 
		LetOrNum0x1R0, 
	},
	LetOrNum0x1R1: {
		symbols.NT_LetOrNum0x, 1, 1, 
		symbols.Symbols{  
			symbols.NT_EMPTY,
		}, 
		LetOrNum0x1R1, 
	},
	LetWS0R0: {
		symbols.NT_LetWS, 0, 0, 
		symbols.Symbols{  
			symbols.T_15,
		}, 
		LetWS0R0, 
	},
	LetWS0R1: {
		symbols.NT_LetWS, 0, 1, 
		symbols.Symbols{  
			symbols.T_15,
		}, 
		LetWS0R1, 
	},
	LetWS1R0: {
		symbols.NT_LetWS, 1, 0, 
		symbols.Symbols{  
			symbols.NT_WS,
		}, 
		LetWS1R0, 
	},
	LetWS1R1: {
		symbols.NT_LetWS, 1, 1, 
		symbols.Symbols{  
			symbols.NT_WS,
		}, 
		LetWS1R1, 
	},
	LineOrBlock0R0: {
		symbols.NT_LineOrBlock, 0, 0, 
		symbols.Symbols{  
			symbols.T_16,
		}, 
		LineOrBlock0R0, 
	},
	LineOrBlock0R1: {
		symbols.NT_LineOrBlock, 0, 1, 
		symbols.Symbols{  
			symbols.T_16,
		}, 
		LineOrBlock0R1, 
	},
	LineOrBlock1R0: {
		symbols.NT_LineOrBlock, 1, 0, 
		symbols.Symbols{  
			symbols.T_11,
		}, 
		LineOrBlock1R0, 
	},
	LineOrBlock1R1: {
		symbols.NT_LineOrBlock, 1, 1, 
		symbols.Symbols{  
			symbols.T_11,
		}, 
		LineOrBlock1R1, 
	},
	NEQUAL0R0: {
		symbols.NT_NEQUAL, 0, 0, 
		symbols.Symbols{  
			symbols.T_17, 
			symbols.NT_WS,
		}, 
		NEQUAL0R0, 
	},
	NEQUAL0R1: {
		symbols.NT_NEQUAL, 0, 1, 
		symbols.Symbols{  
			symbols.T_17, 
			symbols.NT_WS,
		}, 
		NEQUAL0R1, 
	},
	NEQUAL0R2: {
		symbols.NT_NEQUAL, 0, 2, 
		symbols.Symbols{  
			symbols.T_17, 
			symbols.NT_WS,
		}, 
		NEQUAL0R2, 
	},
	NOT0R0: {
		symbols.NT_NOT, 0, 0, 
		symbols.Symbols{  
			symbols.T_0, 
			symbols.NT_WS,
		}, 
		NOT0R0, 
	},
	NOT0R1: {
		symbols.NT_NOT, 0, 1, 
		symbols.Symbols{  
			symbols.T_0, 
			symbols.NT_WS,
		}, 
		NOT0R1, 
	},
	NOT0R2: {
		symbols.NT_NOT, 0, 2, 
		symbols.Symbols{  
			symbols.T_0, 
			symbols.NT_WS,
		}, 
		NOT0R2, 
	},
	OPEN0R0: {
		symbols.NT_OPEN, 0, 0, 
		symbols.Symbols{  
			symbols.T_2, 
			symbols.NT_WS,
		}, 
		OPEN0R0, 
	},
	OPEN0R1: {
		symbols.NT_OPEN, 0, 1, 
		symbols.Symbols{  
			symbols.T_2, 
			symbols.NT_WS,
		}, 
		OPEN0R1, 
	},
	OPEN0R2: {
		symbols.NT_OPEN, 0, 2, 
		symbols.Symbols{  
			symbols.T_2, 
			symbols.NT_WS,
		}, 
		OPEN0R2, 
	},
	OPT0R0: {
		symbols.NT_OPT, 0, 0, 
		symbols.Symbols{  
			symbols.T_8, 
			symbols.NT_WS,
		}, 
		OPT0R0, 
	},
	OPT0R1: {
		symbols.NT_OPT, 0, 1, 
		symbols.Symbols{  
			symbols.T_8, 
			symbols.NT_WS,
		}, 
		OPT0R1, 
	},
	OPT0R2: {
		symbols.NT_OPT, 0, 2, 
		symbols.Symbols{  
			symbols.T_8, 
			symbols.NT_WS,
		}, 
		OPT0R2, 
	},
	OptStarPlus0R0: {
		symbols.NT_OptStarPlus, 0, 0, 
		symbols.Symbols{  
			symbols.NT_OPT,
		}, 
		OptStarPlus0R0, 
	},
	OptStarPlus0R1: {
		symbols.NT_OptStarPlus, 0, 1, 
		symbols.Symbols{  
			symbols.NT_OPT,
		}, 
		OptStarPlus0R1, 
	},
	OptStarPlus1R0: {
		symbols.NT_OptStarPlus, 1, 0, 
		symbols.Symbols{  
			symbols.NT_STAR,
		}, 
		OptStarPlus1R0, 
	},
	OptStarPlus1R1: {
		symbols.NT_OptStarPlus, 1, 1, 
		symbols.Symbols{  
			symbols.NT_STAR,
		}, 
		OptStarPlus1R1, 
	},
	OptStarPlus2R0: {
		symbols.NT_OptStarPlus, 2, 0, 
		symbols.Symbols{  
			symbols.NT_PLUS,
		}, 
		OptStarPlus2R0, 
	},
	OptStarPlus2R1: {
		symbols.NT_OptStarPlus, 2, 1, 
		symbols.Symbols{  
			symbols.NT_PLUS,
		}, 
		OptStarPlus2R1, 
	},
	OptStarPlus3R0: {
		symbols.NT_OptStarPlus, 3, 0, 
		symbols.Symbols{ 
		}, 
		OptStarPlus3R0, 
	},
	PIPE0R0: {
		symbols.NT_PIPE, 0, 0, 
		symbols.Symbols{  
			symbols.T_23, 
			symbols.NT_WS,
		}, 
		PIPE0R0, 
	},
	PIPE0R1: {
		symbols.NT_PIPE, 0, 1, 
		symbols.Symbols{  
			symbols.T_23, 
			symbols.NT_WS,
		}, 
		PIPE0R1, 
	},
	PIPE0R2: {
		symbols.NT_PIPE, 0, 2, 
		symbols.Symbols{  
			symbols.T_23, 
			symbols.NT_WS,
		}, 
		PIPE0R2, 
	},
	PLUS0R0: {
		symbols.NT_PLUS, 0, 0, 
		symbols.Symbols{  
			symbols.T_4, 
			symbols.NT_WS,
		}, 
		PLUS0R0, 
	},
	PLUS0R1: {
		symbols.NT_PLUS, 0, 1, 
		symbols.Symbols{  
			symbols.T_4, 
			symbols.NT_WS,
		}, 
		PLUS0R1, 
	},
	PLUS0R2: {
		symbols.NT_PLUS, 0, 2, 
		symbols.Symbols{  
			symbols.T_4, 
			symbols.NT_WS,
		}, 
		PLUS0R2, 
	},
	Primary0R0: {
		symbols.NT_Primary, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Identifier, 
			symbols.NT_NEQUAL,
		}, 
		Primary0R0, 
	},
	Primary0R1: {
		symbols.NT_Primary, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Identifier, 
			symbols.NT_NEQUAL,
		}, 
		Primary0R1, 
	},
	Primary0R2: {
		symbols.NT_Primary, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Identifier, 
			symbols.NT_NEQUAL,
		}, 
		Primary0R2, 
	},
	Primary1R0: {
		symbols.NT_Primary, 1, 0, 
		symbols.Symbols{  
			symbols.NT_OPEN, 
			symbols.NT_Choice, 
			symbols.NT_CLOSE,
		}, 
		Primary1R0, 
	},
	Primary1R1: {
		symbols.NT_Primary, 1, 1, 
		symbols.Symbols{  
			symbols.NT_OPEN, 
			symbols.NT_Choice, 
			symbols.NT_CLOSE,
		}, 
		Primary1R1, 
	},
	Primary1R2: {
		symbols.NT_Primary, 1, 2, 
		symbols.Symbols{  
			symbols.NT_OPEN, 
			symbols.NT_Choice, 
			symbols.NT_CLOSE,
		}, 
		Primary1R2, 
	},
	Primary1R3: {
		symbols.NT_Primary, 1, 3, 
		symbols.Symbols{  
			symbols.NT_OPEN, 
			symbols.NT_Choice, 
			symbols.NT_CLOSE,
		}, 
		Primary1R3, 
	},
	Primary2R0: {
		symbols.NT_Primary, 2, 0, 
		symbols.Symbols{  
			symbols.NT_StringLiteral,
		}, 
		Primary2R0, 
	},
	Primary2R1: {
		symbols.NT_Primary, 2, 1, 
		symbols.Symbols{  
			symbols.NT_StringLiteral,
		}, 
		Primary2R1, 
	},
	Primary3R0: {
		symbols.NT_Primary, 3, 0, 
		symbols.Symbols{  
			symbols.NT_CharLiteral,
		}, 
		Primary3R0, 
	},
	Primary3R1: {
		symbols.NT_Primary, 3, 1, 
		symbols.Symbols{  
			symbols.NT_CharLiteral,
		}, 
		Primary3R1, 
	},
	Primary4R0: {
		symbols.NT_Primary, 4, 0, 
		symbols.Symbols{  
			symbols.NT_CharClass,
		}, 
		Primary4R0, 
	},
	Primary4R1: {
		symbols.NT_Primary, 4, 1, 
		symbols.Symbols{  
			symbols.NT_CharClass,
		}, 
		Primary4R1, 
	},
	Primary5R0: {
		symbols.NT_Primary, 5, 0, 
		symbols.Symbols{  
			symbols.NT_ANY,
		}, 
		Primary5R0, 
	},
	Primary5R1: {
		symbols.NT_Primary, 5, 1, 
		symbols.Symbols{  
			symbols.NT_ANY,
		}, 
		Primary5R1, 
	},
	Primary6R0: {
		symbols.NT_Primary, 6, 0, 
		symbols.Symbols{  
			symbols.NT_EMPTY,
		}, 
		Primary6R0, 
	},
	Primary6R1: {
		symbols.NT_Primary, 6, 1, 
		symbols.Symbols{  
			symbols.NT_EMPTY,
		}, 
		Primary6R1, 
	},
	RepExpr0x0R0: {
		symbols.NT_RepExpr0x, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Expression, 
			symbols.NT_RepExpr0x,
		}, 
		RepExpr0x0R0, 
	},
	RepExpr0x0R1: {
		symbols.NT_RepExpr0x, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Expression, 
			symbols.NT_RepExpr0x,
		}, 
		RepExpr0x0R1, 
	},
	RepExpr0x0R2: {
		symbols.NT_RepExpr0x, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Expression, 
			symbols.NT_RepExpr0x,
		}, 
		RepExpr0x0R2, 
	},
	RepExpr0x1R0: {
		symbols.NT_RepExpr0x, 1, 0, 
		symbols.Symbols{ 
		}, 
		RepExpr0x1R0, 
	},
	RepPipedSeq0x0R0: {
		symbols.NT_RepPipedSeq0x, 0, 0, 
		symbols.Symbols{  
			symbols.NT_PIPE, 
			symbols.NT_Sequence, 
			symbols.NT_RepPipedSeq0x,
		}, 
		RepPipedSeq0x0R0, 
	},
	RepPipedSeq0x0R1: {
		symbols.NT_RepPipedSeq0x, 0, 1, 
		symbols.Symbols{  
			symbols.NT_PIPE, 
			symbols.NT_Sequence, 
			symbols.NT_RepPipedSeq0x,
		}, 
		RepPipedSeq0x0R1, 
	},
	RepPipedSeq0x0R2: {
		symbols.NT_RepPipedSeq0x, 0, 2, 
		symbols.Symbols{  
			symbols.NT_PIPE, 
			symbols.NT_Sequence, 
			symbols.NT_RepPipedSeq0x,
		}, 
		RepPipedSeq0x0R2, 
	},
	RepPipedSeq0x0R3: {
		symbols.NT_RepPipedSeq0x, 0, 3, 
		symbols.Symbols{  
			symbols.NT_PIPE, 
			symbols.NT_Sequence, 
			symbols.NT_RepPipedSeq0x,
		}, 
		RepPipedSeq0x0R3, 
	},
	RepPipedSeq0x1R0: {
		symbols.NT_RepPipedSeq0x, 1, 0, 
		symbols.Symbols{ 
		}, 
		RepPipedSeq0x1R0, 
	},
	RepRule0x0R0: {
		symbols.NT_RepRule0x, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Rule, 
			symbols.NT_RepRule0x,
		}, 
		RepRule0x0R0, 
	},
	RepRule0x0R1: {
		symbols.NT_RepRule0x, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Rule, 
			symbols.NT_RepRule0x,
		}, 
		RepRule0x0R1, 
	},
	RepRule0x0R2: {
		symbols.NT_RepRule0x, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Rule, 
			symbols.NT_RepRule0x,
		}, 
		RepRule0x0R2, 
	},
	RepRule0x1R0: {
		symbols.NT_RepRule0x, 1, 0, 
		symbols.Symbols{ 
		}, 
		RepRule0x1R0, 
	},
	Rule0R0: {
		symbols.NT_Rule, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Identifier, 
			symbols.NT_EQUAL, 
			symbols.NT_Choice,
		}, 
		Rule0R0, 
	},
	Rule0R1: {
		symbols.NT_Rule, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Identifier, 
			symbols.NT_EQUAL, 
			symbols.NT_Choice,
		}, 
		Rule0R1, 
	},
	Rule0R2: {
		symbols.NT_Rule, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Identifier, 
			symbols.NT_EQUAL, 
			symbols.NT_Choice,
		}, 
		Rule0R2, 
	},
	Rule0R3: {
		symbols.NT_Rule, 0, 3, 
		symbols.Symbols{  
			symbols.NT_Identifier, 
			symbols.NT_EQUAL, 
			symbols.NT_Choice,
		}, 
		Rule0R3, 
	},
	STAR0R0: {
		symbols.NT_STAR, 0, 0, 
		symbols.Symbols{  
			symbols.T_3, 
			symbols.NT_WS,
		}, 
		STAR0R0, 
	},
	STAR0R1: {
		symbols.NT_STAR, 0, 1, 
		symbols.Symbols{  
			symbols.T_3, 
			symbols.NT_WS,
		}, 
		STAR0R1, 
	},
	STAR0R2: {
		symbols.NT_STAR, 0, 2, 
		symbols.Symbols{  
			symbols.T_3, 
			symbols.NT_WS,
		}, 
		STAR0R2, 
	},
	Sequence0R0: {
		symbols.NT_Sequence, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Expression, 
			symbols.NT_RepExpr0x,
		}, 
		Sequence0R0, 
	},
	Sequence0R1: {
		symbols.NT_Sequence, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Expression, 
			symbols.NT_RepExpr0x,
		}, 
		Sequence0R1, 
	},
	Sequence0R2: {
		symbols.NT_Sequence, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Expression, 
			symbols.NT_RepExpr0x,
		}, 
		Sequence0R2, 
	},
	SpaceOrComment0R0: {
		symbols.NT_SpaceOrComment, 0, 0, 
		symbols.Symbols{  
			symbols.T_22,
		}, 
		SpaceOrComment0R0, 
	},
	SpaceOrComment0R1: {
		symbols.NT_SpaceOrComment, 0, 1, 
		symbols.Symbols{  
			symbols.T_22,
		}, 
		SpaceOrComment0R1, 
	},
	SpaceOrComment1R0: {
		symbols.NT_SpaceOrComment, 1, 0, 
		symbols.Symbols{  
			symbols.NT_LineOrBlock,
		}, 
		SpaceOrComment1R0, 
	},
	SpaceOrComment1R1: {
		symbols.NT_SpaceOrComment, 1, 1, 
		symbols.Symbols{  
			symbols.NT_LineOrBlock,
		}, 
		SpaceOrComment1R1, 
	},
	String0R0: {
		symbols.NT_String, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Character, 
			symbols.NT_String,
		}, 
		String0R0, 
	},
	String0R1: {
		symbols.NT_String, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Character, 
			symbols.NT_String,
		}, 
		String0R1, 
	},
	String0R2: {
		symbols.NT_String, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Character, 
			symbols.NT_String,
		}, 
		String0R2, 
	},
	String1R0: {
		symbols.NT_String, 1, 0, 
		symbols.Symbols{ 
		}, 
		String1R0, 
	},
	StringLiteral0R0: {
		symbols.NT_StringLiteral, 0, 0, 
		symbols.Symbols{  
			symbols.T_12, 
			symbols.NT_String, 
			symbols.T_12, 
			symbols.NT_WS,
		}, 
		StringLiteral0R0, 
	},
	StringLiteral0R1: {
		symbols.NT_StringLiteral, 0, 1, 
		symbols.Symbols{  
			symbols.T_12, 
			symbols.NT_String, 
			symbols.T_12, 
			symbols.NT_WS,
		}, 
		StringLiteral0R1, 
	},
	StringLiteral0R2: {
		symbols.NT_StringLiteral, 0, 2, 
		symbols.Symbols{  
			symbols.T_12, 
			symbols.NT_String, 
			symbols.T_12, 
			symbols.NT_WS,
		}, 
		StringLiteral0R2, 
	},
	StringLiteral0R3: {
		symbols.NT_StringLiteral, 0, 3, 
		symbols.Symbols{  
			symbols.T_12, 
			symbols.NT_String, 
			symbols.T_12, 
			symbols.NT_WS,
		}, 
		StringLiteral0R3, 
	},
	StringLiteral0R4: {
		symbols.NT_StringLiteral, 0, 4, 
		symbols.Symbols{  
			symbols.T_12, 
			symbols.NT_String, 
			symbols.T_12, 
			symbols.NT_WS,
		}, 
		StringLiteral0R4, 
	},
	UnclosedChar0R0: {
		symbols.NT_UnclosedChar, 0, 0, 
		symbols.Symbols{  
			symbols.T_19, 
			symbols.NT_Character,
		}, 
		UnclosedChar0R0, 
	},
	UnclosedChar0R1: {
		symbols.NT_UnclosedChar, 0, 1, 
		symbols.Symbols{  
			symbols.T_19, 
			symbols.NT_Character,
		}, 
		UnclosedChar0R1, 
	},
	UnclosedChar0R2: {
		symbols.NT_UnclosedChar, 0, 2, 
		symbols.Symbols{  
			symbols.T_19, 
			symbols.NT_Character,
		}, 
		UnclosedChar0R2, 
	},
	UnclosedChars0R0: {
		symbols.NT_UnclosedChars, 0, 0, 
		symbols.Symbols{  
			symbols.NT_UnclosedChar, 
			symbols.NT_UnclosedChars,
		}, 
		UnclosedChars0R0, 
	},
	UnclosedChars0R1: {
		symbols.NT_UnclosedChars, 0, 1, 
		symbols.Symbols{  
			symbols.NT_UnclosedChar, 
			symbols.NT_UnclosedChars,
		}, 
		UnclosedChars0R1, 
	},
	UnclosedChars0R2: {
		symbols.NT_UnclosedChars, 0, 2, 
		symbols.Symbols{  
			symbols.NT_UnclosedChar, 
			symbols.NT_UnclosedChars,
		}, 
		UnclosedChars0R2, 
	},
	UnclosedChars1R0: {
		symbols.NT_UnclosedChars, 1, 0, 
		symbols.Symbols{ 
		}, 
		UnclosedChars1R0, 
	},
	WS0R0: {
		symbols.NT_WS, 0, 0, 
		symbols.Symbols{  
			symbols.NT_SpaceOrComment, 
			symbols.NT_WS,
		}, 
		WS0R0, 
	},
	WS0R1: {
		symbols.NT_WS, 0, 1, 
		symbols.Symbols{  
			symbols.NT_SpaceOrComment, 
			symbols.NT_WS,
		}, 
		WS0R1, 
	},
	WS0R2: {
		symbols.NT_WS, 0, 2, 
		symbols.Symbols{  
			symbols.NT_SpaceOrComment, 
			symbols.NT_WS,
		}, 
		WS0R2, 
	},
	WS1R0: {
		symbols.NT_WS, 1, 0, 
		symbols.Symbols{  
			symbols.NT_EMPTY,
		}, 
		WS1R0, 
	},
	WS1R1: {
		symbols.NT_WS, 1, 1, 
		symbols.Symbols{  
			symbols.NT_EMPTY,
		}, 
		WS1R1, 
	},
}

var slotIndex = map[Index]Label { 
	Index{ symbols.NT_AND,0,0 }: AND0R0,
	Index{ symbols.NT_AND,0,1 }: AND0R1,
	Index{ symbols.NT_AND,0,2 }: AND0R2,
	Index{ symbols.NT_ANY,0,0 }: ANY0R0,
	Index{ symbols.NT_ANY,0,1 }: ANY0R1,
	Index{ symbols.NT_ANY,0,2 }: ANY0R2,
	Index{ symbols.NT_CLOSE,0,0 }: CLOSE0R0,
	Index{ symbols.NT_CLOSE,0,1 }: CLOSE0R1,
	Index{ symbols.NT_CLOSE,0,2 }: CLOSE0R2,
	Index{ symbols.NT_CharClass,0,0 }: CharClass0R0,
	Index{ symbols.NT_CharClass,0,1 }: CharClass0R1,
	Index{ symbols.NT_CharClass,0,2 }: CharClass0R2,
	Index{ symbols.NT_CharClass,0,3 }: CharClass0R3,
	Index{ symbols.NT_CharClass,0,4 }: CharClass0R4,
	Index{ symbols.NT_CharLiteral,0,0 }: CharLiteral0R0,
	Index{ symbols.NT_CharLiteral,0,1 }: CharLiteral0R1,
	Index{ symbols.NT_CharLiteral,0,2 }: CharLiteral0R2,
	Index{ symbols.NT_CharLiteral,0,3 }: CharLiteral0R3,
	Index{ symbols.NT_Character,0,0 }: Character0R0,
	Index{ symbols.NT_Character,0,1 }: Character0R1,
	Index{ symbols.NT_Character,1,0 }: Character1R0,
	Index{ symbols.NT_Character,1,1 }: Character1R1,
	Index{ symbols.NT_Choice,0,0 }: Choice0R0,
	Index{ symbols.NT_Choice,0,1 }: Choice0R1,
	Index{ symbols.NT_Choice,0,2 }: Choice0R2,
	Index{ symbols.NT_EMPTY,0,0 }: EMPTY0R0,
	Index{ symbols.NT_EMPTY,0,1 }: EMPTY0R1,
	Index{ symbols.NT_EMPTY,0,2 }: EMPTY0R2,
	Index{ symbols.NT_EQUAL,0,0 }: EQUAL0R0,
	Index{ symbols.NT_EQUAL,0,1 }: EQUAL0R1,
	Index{ symbols.NT_EQUAL,0,2 }: EQUAL0R2,
	Index{ symbols.NT_Expression,0,0 }: Expression0R0,
	Index{ symbols.NT_Expression,0,1 }: Expression0R1,
	Index{ symbols.NT_Expression,0,2 }: Expression0R2,
	Index{ symbols.NT_Expression,1,0 }: Expression1R0,
	Index{ symbols.NT_Expression,1,1 }: Expression1R1,
	Index{ symbols.NT_Expression,1,2 }: Expression1R2,
	Index{ symbols.NT_Expression,2,0 }: Expression2R0,
	Index{ symbols.NT_Expression,2,1 }: Expression2R1,
	Index{ symbols.NT_Expression,2,2 }: Expression2R2,
	Index{ symbols.NT_Grammar,0,0 }: Grammar0R0,
	Index{ symbols.NT_Grammar,0,1 }: Grammar0R1,
	Index{ symbols.NT_Grammar,0,2 }: Grammar0R2,
	Index{ symbols.NT_Grammar,0,3 }: Grammar0R3,
	Index{ symbols.NT_Identifier,0,0 }: Identifier0R0,
	Index{ symbols.NT_Identifier,0,1 }: Identifier0R1,
	Index{ symbols.NT_Identifier,0,2 }: Identifier0R2,
	Index{ symbols.NT_Identifier,0,3 }: Identifier0R3,
	Index{ symbols.NT_LetOrNum,0,0 }: LetOrNum0R0,
	Index{ symbols.NT_LetOrNum,0,1 }: LetOrNum0R1,
	Index{ symbols.NT_LetOrNum,1,0 }: LetOrNum1R0,
	Index{ symbols.NT_LetOrNum,1,1 }: LetOrNum1R1,
	Index{ symbols.NT_LetOrNum,2,0 }: LetOrNum2R0,
	Index{ symbols.NT_LetOrNum,2,1 }: LetOrNum2R1,
	Index{ symbols.NT_LetOrNum0x,0,0 }: LetOrNum0x0R0,
	Index{ symbols.NT_LetOrNum0x,0,1 }: LetOrNum0x0R1,
	Index{ symbols.NT_LetOrNum0x,0,2 }: LetOrNum0x0R2,
	Index{ symbols.NT_LetOrNum0x,1,0 }: LetOrNum0x1R0,
	Index{ symbols.NT_LetOrNum0x,1,1 }: LetOrNum0x1R1,
	Index{ symbols.NT_LetWS,0,0 }: LetWS0R0,
	Index{ symbols.NT_LetWS,0,1 }: LetWS0R1,
	Index{ symbols.NT_LetWS,1,0 }: LetWS1R0,
	Index{ symbols.NT_LetWS,1,1 }: LetWS1R1,
	Index{ symbols.NT_LineOrBlock,0,0 }: LineOrBlock0R0,
	Index{ symbols.NT_LineOrBlock,0,1 }: LineOrBlock0R1,
	Index{ symbols.NT_LineOrBlock,1,0 }: LineOrBlock1R0,
	Index{ symbols.NT_LineOrBlock,1,1 }: LineOrBlock1R1,
	Index{ symbols.NT_NEQUAL,0,0 }: NEQUAL0R0,
	Index{ symbols.NT_NEQUAL,0,1 }: NEQUAL0R1,
	Index{ symbols.NT_NEQUAL,0,2 }: NEQUAL0R2,
	Index{ symbols.NT_NOT,0,0 }: NOT0R0,
	Index{ symbols.NT_NOT,0,1 }: NOT0R1,
	Index{ symbols.NT_NOT,0,2 }: NOT0R2,
	Index{ symbols.NT_OPEN,0,0 }: OPEN0R0,
	Index{ symbols.NT_OPEN,0,1 }: OPEN0R1,
	Index{ symbols.NT_OPEN,0,2 }: OPEN0R2,
	Index{ symbols.NT_OPT,0,0 }: OPT0R0,
	Index{ symbols.NT_OPT,0,1 }: OPT0R1,
	Index{ symbols.NT_OPT,0,2 }: OPT0R2,
	Index{ symbols.NT_OptStarPlus,0,0 }: OptStarPlus0R0,
	Index{ symbols.NT_OptStarPlus,0,1 }: OptStarPlus0R1,
	Index{ symbols.NT_OptStarPlus,1,0 }: OptStarPlus1R0,
	Index{ symbols.NT_OptStarPlus,1,1 }: OptStarPlus1R1,
	Index{ symbols.NT_OptStarPlus,2,0 }: OptStarPlus2R0,
	Index{ symbols.NT_OptStarPlus,2,1 }: OptStarPlus2R1,
	Index{ symbols.NT_OptStarPlus,3,0 }: OptStarPlus3R0,
	Index{ symbols.NT_PIPE,0,0 }: PIPE0R0,
	Index{ symbols.NT_PIPE,0,1 }: PIPE0R1,
	Index{ symbols.NT_PIPE,0,2 }: PIPE0R2,
	Index{ symbols.NT_PLUS,0,0 }: PLUS0R0,
	Index{ symbols.NT_PLUS,0,1 }: PLUS0R1,
	Index{ symbols.NT_PLUS,0,2 }: PLUS0R2,
	Index{ symbols.NT_Primary,0,0 }: Primary0R0,
	Index{ symbols.NT_Primary,0,1 }: Primary0R1,
	Index{ symbols.NT_Primary,0,2 }: Primary0R2,
	Index{ symbols.NT_Primary,1,0 }: Primary1R0,
	Index{ symbols.NT_Primary,1,1 }: Primary1R1,
	Index{ symbols.NT_Primary,1,2 }: Primary1R2,
	Index{ symbols.NT_Primary,1,3 }: Primary1R3,
	Index{ symbols.NT_Primary,2,0 }: Primary2R0,
	Index{ symbols.NT_Primary,2,1 }: Primary2R1,
	Index{ symbols.NT_Primary,3,0 }: Primary3R0,
	Index{ symbols.NT_Primary,3,1 }: Primary3R1,
	Index{ symbols.NT_Primary,4,0 }: Primary4R0,
	Index{ symbols.NT_Primary,4,1 }: Primary4R1,
	Index{ symbols.NT_Primary,5,0 }: Primary5R0,
	Index{ symbols.NT_Primary,5,1 }: Primary5R1,
	Index{ symbols.NT_Primary,6,0 }: Primary6R0,
	Index{ symbols.NT_Primary,6,1 }: Primary6R1,
	Index{ symbols.NT_RepExpr0x,0,0 }: RepExpr0x0R0,
	Index{ symbols.NT_RepExpr0x,0,1 }: RepExpr0x0R1,
	Index{ symbols.NT_RepExpr0x,0,2 }: RepExpr0x0R2,
	Index{ symbols.NT_RepExpr0x,1,0 }: RepExpr0x1R0,
	Index{ symbols.NT_RepPipedSeq0x,0,0 }: RepPipedSeq0x0R0,
	Index{ symbols.NT_RepPipedSeq0x,0,1 }: RepPipedSeq0x0R1,
	Index{ symbols.NT_RepPipedSeq0x,0,2 }: RepPipedSeq0x0R2,
	Index{ symbols.NT_RepPipedSeq0x,0,3 }: RepPipedSeq0x0R3,
	Index{ symbols.NT_RepPipedSeq0x,1,0 }: RepPipedSeq0x1R0,
	Index{ symbols.NT_RepRule0x,0,0 }: RepRule0x0R0,
	Index{ symbols.NT_RepRule0x,0,1 }: RepRule0x0R1,
	Index{ symbols.NT_RepRule0x,0,2 }: RepRule0x0R2,
	Index{ symbols.NT_RepRule0x,1,0 }: RepRule0x1R0,
	Index{ symbols.NT_Rule,0,0 }: Rule0R0,
	Index{ symbols.NT_Rule,0,1 }: Rule0R1,
	Index{ symbols.NT_Rule,0,2 }: Rule0R2,
	Index{ symbols.NT_Rule,0,3 }: Rule0R3,
	Index{ symbols.NT_STAR,0,0 }: STAR0R0,
	Index{ symbols.NT_STAR,0,1 }: STAR0R1,
	Index{ symbols.NT_STAR,0,2 }: STAR0R2,
	Index{ symbols.NT_Sequence,0,0 }: Sequence0R0,
	Index{ symbols.NT_Sequence,0,1 }: Sequence0R1,
	Index{ symbols.NT_Sequence,0,2 }: Sequence0R2,
	Index{ symbols.NT_SpaceOrComment,0,0 }: SpaceOrComment0R0,
	Index{ symbols.NT_SpaceOrComment,0,1 }: SpaceOrComment0R1,
	Index{ symbols.NT_SpaceOrComment,1,0 }: SpaceOrComment1R0,
	Index{ symbols.NT_SpaceOrComment,1,1 }: SpaceOrComment1R1,
	Index{ symbols.NT_String,0,0 }: String0R0,
	Index{ symbols.NT_String,0,1 }: String0R1,
	Index{ symbols.NT_String,0,2 }: String0R2,
	Index{ symbols.NT_String,1,0 }: String1R0,
	Index{ symbols.NT_StringLiteral,0,0 }: StringLiteral0R0,
	Index{ symbols.NT_StringLiteral,0,1 }: StringLiteral0R1,
	Index{ symbols.NT_StringLiteral,0,2 }: StringLiteral0R2,
	Index{ symbols.NT_StringLiteral,0,3 }: StringLiteral0R3,
	Index{ symbols.NT_StringLiteral,0,4 }: StringLiteral0R4,
	Index{ symbols.NT_UnclosedChar,0,0 }: UnclosedChar0R0,
	Index{ symbols.NT_UnclosedChar,0,1 }: UnclosedChar0R1,
	Index{ symbols.NT_UnclosedChar,0,2 }: UnclosedChar0R2,
	Index{ symbols.NT_UnclosedChars,0,0 }: UnclosedChars0R0,
	Index{ symbols.NT_UnclosedChars,0,1 }: UnclosedChars0R1,
	Index{ symbols.NT_UnclosedChars,0,2 }: UnclosedChars0R2,
	Index{ symbols.NT_UnclosedChars,1,0 }: UnclosedChars1R0,
	Index{ symbols.NT_WS,0,0 }: WS0R0,
	Index{ symbols.NT_WS,0,1 }: WS0R1,
	Index{ symbols.NT_WS,0,2 }: WS0R2,
	Index{ symbols.NT_WS,1,0 }: WS1R0,
	Index{ symbols.NT_WS,1,1 }: WS1R1,
}

var alternates = map[symbols.NT][]Label{ 
	symbols.NT_Grammar:[]Label{ Grammar0R0 },
	symbols.NT_RepRule0x:[]Label{ RepRule0x0R0,RepRule0x1R0 },
	symbols.NT_Rule:[]Label{ Rule0R0 },
	symbols.NT_Choice:[]Label{ Choice0R0 },
	symbols.NT_RepPipedSeq0x:[]Label{ RepPipedSeq0x0R0,RepPipedSeq0x1R0 },
	symbols.NT_Sequence:[]Label{ Sequence0R0 },
	symbols.NT_RepExpr0x:[]Label{ RepExpr0x0R0,RepExpr0x1R0 },
	symbols.NT_Expression:[]Label{ Expression0R0,Expression1R0,Expression2R0 },
	symbols.NT_OptStarPlus:[]Label{ OptStarPlus0R0,OptStarPlus1R0,OptStarPlus2R0,OptStarPlus3R0 },
	symbols.NT_Primary:[]Label{ Primary0R0,Primary1R0,Primary2R0,Primary3R0,Primary4R0,Primary5R0,Primary6R0 },
	symbols.NT_Identifier:[]Label{ Identifier0R0 },
	symbols.NT_LetWS:[]Label{ LetWS0R0,LetWS1R0 },
	symbols.NT_LetOrNum0x:[]Label{ LetOrNum0x0R0,LetOrNum0x1R0 },
	symbols.NT_LetOrNum:[]Label{ LetOrNum0R0,LetOrNum1R0,LetOrNum2R0 },
	symbols.NT_StringLiteral:[]Label{ StringLiteral0R0 },
	symbols.NT_String:[]Label{ String0R0,String1R0 },
	symbols.NT_CharLiteral:[]Label{ CharLiteral0R0 },
	symbols.NT_CharClass:[]Label{ CharClass0R0 },
	symbols.NT_UnclosedChars:[]Label{ UnclosedChars0R0,UnclosedChars1R0 },
	symbols.NT_UnclosedChar:[]Label{ UnclosedChar0R0 },
	symbols.NT_Character:[]Label{ Character0R0,Character1R0 },
	symbols.NT_EQUAL:[]Label{ EQUAL0R0 },
	symbols.NT_NEQUAL:[]Label{ NEQUAL0R0 },
	symbols.NT_PIPE:[]Label{ PIPE0R0 },
	symbols.NT_AND:[]Label{ AND0R0 },
	symbols.NT_NOT:[]Label{ NOT0R0 },
	symbols.NT_OPT:[]Label{ OPT0R0 },
	symbols.NT_STAR:[]Label{ STAR0R0 },
	symbols.NT_PLUS:[]Label{ PLUS0R0 },
	symbols.NT_OPEN:[]Label{ OPEN0R0 },
	symbols.NT_CLOSE:[]Label{ CLOSE0R0 },
	symbols.NT_ANY:[]Label{ ANY0R0 },
	symbols.NT_EMPTY:[]Label{ EMPTY0R0 },
	symbols.NT_WS:[]Label{ WS0R0,WS1R0 },
	symbols.NT_SpaceOrComment:[]Label{ SpaceOrComment0R0,SpaceOrComment1R0 },
	symbols.NT_LineOrBlock:[]Label{ LineOrBlock0R0,LineOrBlock1R0 },
}

var nullable = []bool { 
	false, // AND0R0 
	false, // AND0R1 
	true, // AND0R2 
	false, // ANY0R0 
	false, // ANY0R1 
	true, // ANY0R2 
	false, // CLOSE0R0 
	false, // CLOSE0R1 
	true, // CLOSE0R2 
	false, // CharClass0R0 
	false, // CharClass0R1 
	false, // CharClass0R2 
	false, // CharClass0R3 
	true, // CharClass0R4 
	false, // CharLiteral0R0 
	false, // CharLiteral0R1 
	false, // CharLiteral0R2 
	true, // CharLiteral0R3 
	false, // Character0R0 
	true, // Character0R1 
	false, // Character1R0 
	true, // Character1R1 
	false, // Choice0R0 
	true, // Choice0R1 
	true, // Choice0R2 
	false, // EMPTY0R0 
	false, // EMPTY0R1 
	true, // EMPTY0R2 
	false, // EQUAL0R0 
	false, // EQUAL0R1 
	true, // EQUAL0R2 
	false, // Expression0R0 
	false, // Expression0R1 
	true, // Expression0R2 
	false, // Expression1R0 
	false, // Expression1R1 
	true, // Expression1R2 
	false, // Expression2R0 
	true, // Expression2R1 
	true, // Expression2R2 
	false, // Grammar0R0 
	false, // Grammar0R1 
	true, // Grammar0R2 
	true, // Grammar0R3 
	false, // Identifier0R0 
	false, // Identifier0R1 
	false, // Identifier0R2 
	true, // Identifier0R3 
	false, // LetOrNum0R0 
	true, // LetOrNum0R1 
	false, // LetOrNum1R0 
	true, // LetOrNum1R1 
	false, // LetOrNum2R0 
	true, // LetOrNum2R1 
	false, // LetOrNum0x0R0 
	false, // LetOrNum0x0R1 
	true, // LetOrNum0x0R2 
	false, // LetOrNum0x1R0 
	true, // LetOrNum0x1R1 
	false, // LetWS0R0 
	true, // LetWS0R1 
	false, // LetWS1R0 
	true, // LetWS1R1 
	false, // LineOrBlock0R0 
	true, // LineOrBlock0R1 
	false, // LineOrBlock1R0 
	true, // LineOrBlock1R1 
	false, // NEQUAL0R0 
	false, // NEQUAL0R1 
	true, // NEQUAL0R2 
	false, // NOT0R0 
	false, // NOT0R1 
	true, // NOT0R2 
	false, // OPEN0R0 
	false, // OPEN0R1 
	true, // OPEN0R2 
	false, // OPT0R0 
	false, // OPT0R1 
	true, // OPT0R2 
	false, // OptStarPlus0R0 
	true, // OptStarPlus0R1 
	false, // OptStarPlus1R0 
	true, // OptStarPlus1R1 
	false, // OptStarPlus2R0 
	true, // OptStarPlus2R1 
	true, // OptStarPlus3R0 
	false, // PIPE0R0 
	false, // PIPE0R1 
	true, // PIPE0R2 
	false, // PLUS0R0 
	false, // PLUS0R1 
	true, // PLUS0R2 
	false, // Primary0R0 
	false, // Primary0R1 
	true, // Primary0R2 
	false, // Primary1R0 
	false, // Primary1R1 
	false, // Primary1R2 
	true, // Primary1R3 
	false, // Primary2R0 
	true, // Primary2R1 
	false, // Primary3R0 
	true, // Primary3R1 
	false, // Primary4R0 
	true, // Primary4R1 
	false, // Primary5R0 
	true, // Primary5R1 
	false, // Primary6R0 
	true, // Primary6R1 
	false, // RepExpr0x0R0 
	true, // RepExpr0x0R1 
	true, // RepExpr0x0R2 
	true, // RepExpr0x1R0 
	false, // RepPipedSeq0x0R0 
	false, // RepPipedSeq0x0R1 
	true, // RepPipedSeq0x0R2 
	true, // RepPipedSeq0x0R3 
	true, // RepPipedSeq0x1R0 
	false, // RepRule0x0R0 
	true, // RepRule0x0R1 
	true, // RepRule0x0R2 
	true, // RepRule0x1R0 
	false, // Rule0R0 
	false, // Rule0R1 
	false, // Rule0R2 
	true, // Rule0R3 
	false, // STAR0R0 
	false, // STAR0R1 
	true, // STAR0R2 
	false, // Sequence0R0 
	true, // Sequence0R1 
	true, // Sequence0R2 
	false, // SpaceOrComment0R0 
	true, // SpaceOrComment0R1 
	false, // SpaceOrComment1R0 
	true, // SpaceOrComment1R1 
	false, // String0R0 
	true, // String0R1 
	true, // String0R2 
	true, // String1R0 
	false, // StringLiteral0R0 
	false, // StringLiteral0R1 
	false, // StringLiteral0R2 
	false, // StringLiteral0R3 
	true, // StringLiteral0R4 
	false, // UnclosedChar0R0 
	false, // UnclosedChar0R1 
	true, // UnclosedChar0R2 
	false, // UnclosedChars0R0 
	true, // UnclosedChars0R1 
	true, // UnclosedChars0R2 
	true, // UnclosedChars1R0 
	false, // WS0R0 
	false, // WS0R1 
	true, // WS0R2 
	false, // WS1R0 
	true, // WS1R1 
}

var firstT = []map[token.Type]bool { 
	{  token.T_1: true,  }, // AND0R0 
	{  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_22: true,  }, // AND0R1 
	{  }, // AND0R2 
	{  token.T_5: true,  }, // ANY0R0 
	{  token.T_6: true,  token.T_22: true,  token.T_11: true,  token.T_16: true,  }, // ANY0R1 
	{  }, // ANY0R2 
	{  token.T_2: true,  }, // CLOSE0R0 
	{  token.T_6: true,  token.T_22: true,  token.T_11: true,  token.T_16: true,  }, // CLOSE0R1 
	{  }, // CLOSE0R2 
	{  token.T_9: true,  }, // CharClass0R0 
	{  token.T_19: true,  token.T_10: true,  }, // CharClass0R1 
	{  token.T_10: true,  }, // CharClass0R2 
	{  token.T_6: true,  token.T_22: true,  token.T_11: true,  token.T_16: true,  }, // CharClass0R3 
	{  }, // CharClass0R4 
	{  token.T_21: true,  }, // CharLiteral0R0 
	{  token.T_18: true,  token.T_14: true,  }, // CharLiteral0R1 
	{  token.T_21: true,  }, // CharLiteral0R2 
	{  }, // CharLiteral0R3 
	{  token.T_18: true,  }, // Character0R0 
	{  }, // Character0R1 
	{  token.T_14: true,  }, // Character1R0 
	{  }, // Character1R1 
	{  token.T_5: true,  token.T_11: true,  token.T_9: true,  token.T_21: true,  token.T_2: true,  token.T_16: true,  token.T_6: true,  token.T_1: true,  token.T_15: true,  token.T_22: true,  token.T_12: true,  token.T_0: true,  }, // Choice0R0 
	{  token.T_23: true,  }, // Choice0R1 
	{  }, // Choice0R2 
	{  token.T_6: true,  }, // EMPTY0R0 
	{  token.T_6: true,  token.T_22: true,  token.T_11: true,  token.T_16: true,  }, // EMPTY0R1 
	{  }, // EMPTY0R2 
	{  token.T_7: true,  }, // EQUAL0R0 
	{  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  }, // EQUAL0R1 
	{  }, // EQUAL0R2 
	{  token.T_1: true,  }, // Expression0R0 
	{  token.T_15: true,  token.T_12: true,  token.T_21: true,  token.T_22: true,  token.T_2: true,  token.T_9: true,  token.T_5: true,  token.T_16: true,  token.T_6: true,  token.T_11: true,  }, // Expression0R1 
	{  }, // Expression0R2 
	{  token.T_0: true,  }, // Expression1R0 
	{  token.T_15: true,  token.T_2: true,  token.T_5: true,  token.T_22: true,  token.T_12: true,  token.T_16: true,  token.T_6: true,  token.T_9: true,  token.T_11: true,  token.T_21: true,  }, // Expression1R1 
	{  }, // Expression1R2 
	{  token.T_11: true,  token.T_2: true,  token.T_16: true,  token.T_12: true,  token.T_21: true,  token.T_9: true,  token.T_5: true,  token.T_15: true,  token.T_22: true,  token.T_6: true,  }, // Expression2R0 
	{  token.T_8: true,  token.T_3: true,  token.T_4: true,  }, // Expression2R1 
	{  }, // Expression2R2 
	{  token.T_6: true,  token.T_22: true,  token.T_11: true,  token.T_16: true,  }, // Grammar0R0 
	{  token.T_15: true,  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  }, // Grammar0R1 
	{  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_15: true,  }, // Grammar0R2 
	{  }, // Grammar0R3 
	{  token.T_6: true,  token.T_15: true,  token.T_22: true,  token.T_11: true,  token.T_16: true,  }, // Identifier0R0 
	{  token.T_22: true,  token.T_15: true,  token.T_20: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  }, // Identifier0R1 
	{  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  }, // Identifier0R2 
	{  }, // Identifier0R3 
	{  token.T_15: true,  }, // LetOrNum0R0 
	{  }, // LetOrNum0R1 
	{  token.T_20: true,  }, // LetOrNum1R0 
	{  }, // LetOrNum1R1 
	{  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  }, // LetOrNum2R0 
	{  }, // LetOrNum2R1 
	{  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_22: true,  token.T_15: true,  token.T_20: true,  }, // LetOrNum0x0R0 
	{  token.T_20: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_22: true,  token.T_15: true,  }, // LetOrNum0x0R1 
	{  }, // LetOrNum0x0R2 
	{  token.T_6: true,  }, // LetOrNum0x1R0 
	{  }, // LetOrNum0x1R1 
	{  token.T_15: true,  }, // LetWS0R0 
	{  }, // LetWS0R1 
	{  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_22: true,  }, // LetWS1R0 
	{  }, // LetWS1R1 
	{  token.T_16: true,  }, // LineOrBlock0R0 
	{  }, // LineOrBlock0R1 
	{  token.T_11: true,  }, // LineOrBlock1R0 
	{  }, // LineOrBlock1R1 
	{  token.T_17: true,  }, // NEQUAL0R0 
	{  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_22: true,  }, // NEQUAL0R1 
	{  }, // NEQUAL0R2 
	{  token.T_0: true,  }, // NOT0R0 
	{  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_22: true,  }, // NOT0R1 
	{  }, // NOT0R2 
	{  token.T_2: true,  }, // OPEN0R0 
	{  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  }, // OPEN0R1 
	{  }, // OPEN0R2 
	{  token.T_8: true,  }, // OPT0R0 
	{  token.T_16: true,  token.T_6: true,  token.T_22: true,  token.T_11: true,  }, // OPT0R1 
	{  }, // OPT0R2 
	{  token.T_8: true,  }, // OptStarPlus0R0 
	{  }, // OptStarPlus0R1 
	{  token.T_3: true,  }, // OptStarPlus1R0 
	{  }, // OptStarPlus1R1 
	{  token.T_4: true,  }, // OptStarPlus2R0 
	{  }, // OptStarPlus2R1 
	{  }, // OptStarPlus3R0 
	{  token.T_23: true,  }, // PIPE0R0 
	{  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  }, // PIPE0R1 
	{  }, // PIPE0R2 
	{  token.T_4: true,  }, // PLUS0R0 
	{  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  }, // PLUS0R1 
	{  }, // PLUS0R2 
	{  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_15: true,  }, // Primary0R0 
	{  token.T_17: true,  }, // Primary0R1 
	{  }, // Primary0R2 
	{  token.T_2: true,  }, // Primary1R0 
	{  token.T_2: true,  token.T_0: true,  token.T_6: true,  token.T_21: true,  token.T_12: true,  token.T_9: true,  token.T_5: true,  token.T_1: true,  token.T_22: true,  token.T_15: true,  token.T_11: true,  token.T_16: true,  }, // Primary1R1 
	{  token.T_2: true,  }, // Primary1R2 
	{  }, // Primary1R3 
	{  token.T_12: true,  }, // Primary2R0 
	{  }, // Primary2R1 
	{  token.T_21: true,  }, // Primary3R0 
	{  }, // Primary3R1 
	{  token.T_9: true,  }, // Primary4R0 
	{  }, // Primary4R1 
	{  token.T_5: true,  }, // Primary5R0 
	{  }, // Primary5R1 
	{  token.T_6: true,  }, // Primary6R0 
	{  }, // Primary6R1 
	{  token.T_15: true,  token.T_9: true,  token.T_6: true,  token.T_12: true,  token.T_16: true,  token.T_11: true,  token.T_22: true,  token.T_21: true,  token.T_5: true,  token.T_1: true,  token.T_0: true,  token.T_2: true,  }, // RepExpr0x0R0 
	{  token.T_22: true,  token.T_9: true,  token.T_0: true,  token.T_6: true,  token.T_12: true,  token.T_2: true,  token.T_16: true,  token.T_1: true,  token.T_5: true,  token.T_15: true,  token.T_21: true,  token.T_11: true,  }, // RepExpr0x0R1 
	{  }, // RepExpr0x0R2 
	{  }, // RepExpr0x1R0 
	{  token.T_23: true,  }, // RepPipedSeq0x0R0 
	{  token.T_15: true,  token.T_6: true,  token.T_9: true,  token.T_22: true,  token.T_5: true,  token.T_11: true,  token.T_12: true,  token.T_0: true,  token.T_16: true,  token.T_1: true,  token.T_21: true,  token.T_2: true,  }, // RepPipedSeq0x0R1 
	{  token.T_23: true,  }, // RepPipedSeq0x0R2 
	{  }, // RepPipedSeq0x0R3 
	{  }, // RepPipedSeq0x1R0 
	{  token.T_15: true,  token.T_22: true,  token.T_11: true,  token.T_16: true,  token.T_6: true,  }, // RepRule0x0R0 
	{  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_15: true,  token.T_22: true,  }, // RepRule0x0R1 
	{  }, // RepRule0x0R2 
	{  }, // RepRule0x1R0 
	{  token.T_11: true,  token.T_16: true,  token.T_6: true,  token.T_15: true,  token.T_22: true,  }, // Rule0R0 
	{  token.T_7: true,  }, // Rule0R1 
	{  token.T_5: true,  token.T_15: true,  token.T_9: true,  token.T_22: true,  token.T_0: true,  token.T_1: true,  token.T_2: true,  token.T_11: true,  token.T_12: true,  token.T_16: true,  token.T_21: true,  token.T_6: true,  }, // Rule0R2 
	{  }, // Rule0R3 
	{  token.T_3: true,  }, // STAR0R0 
	{  token.T_16: true,  token.T_6: true,  token.T_22: true,  token.T_11: true,  }, // STAR0R1 
	{  }, // STAR0R2 
	{  token.T_15: true,  token.T_2: true,  token.T_11: true,  token.T_5: true,  token.T_1: true,  token.T_22: true,  token.T_16: true,  token.T_0: true,  token.T_9: true,  token.T_6: true,  token.T_12: true,  token.T_21: true,  }, // Sequence0R0 
	{  token.T_11: true,  token.T_9: true,  token.T_12: true,  token.T_2: true,  token.T_16: true,  token.T_1: true,  token.T_21: true,  token.T_5: true,  token.T_22: true,  token.T_6: true,  token.T_0: true,  token.T_15: true,  }, // Sequence0R1 
	{  }, // Sequence0R2 
	{  token.T_22: true,  }, // SpaceOrComment0R0 
	{  }, // SpaceOrComment0R1 
	{  token.T_16: true,  token.T_11: true,  }, // SpaceOrComment1R0 
	{  }, // SpaceOrComment1R1 
	{  token.T_14: true,  token.T_18: true,  }, // String0R0 
	{  token.T_18: true,  token.T_14: true,  }, // String0R1 
	{  }, // String0R2 
	{  }, // String1R0 
	{  token.T_12: true,  }, // StringLiteral0R0 
	{  token.T_12: true,  token.T_18: true,  token.T_14: true,  }, // StringLiteral0R1 
	{  token.T_12: true,  }, // StringLiteral0R2 
	{  token.T_16: true,  token.T_6: true,  token.T_22: true,  token.T_11: true,  }, // StringLiteral0R3 
	{  }, // StringLiteral0R4 
	{  token.T_19: true,  }, // UnclosedChar0R0 
	{  token.T_14: true,  token.T_18: true,  }, // UnclosedChar0R1 
	{  }, // UnclosedChar0R2 
	{  token.T_19: true,  }, // UnclosedChars0R0 
	{  token.T_19: true,  }, // UnclosedChars0R1 
	{  }, // UnclosedChars0R2 
	{  }, // UnclosedChars1R0 
	{  token.T_11: true,  token.T_16: true,  token.T_22: true,  }, // WS0R0 
	{  token.T_6: true,  token.T_22: true,  token.T_11: true,  token.T_16: true,  }, // WS0R1 
	{  }, // WS0R2 
	{  token.T_6: true,  }, // WS1R0 
	{  }, // WS1R1 
}
