
// Package slot is generated by gogll. Do not edit. 
package slot

import(
	"bytes"
	"fmt"
	
	"JSON/parser/symbols"
	"JSON/token"
)

type Label int

const(
	Array0R0 Label = iota
	Array0R1
	Array0R2
	Array0R3
	Array1F0
	CHAR0R0
	CHAR0R1
	CHAR0R2
	CHAR1R0
	CHAR1R1
	CHAR1R2
	CHAR2F0
	COLON0R0
	COLON0R1
	COLON0R2
	COLON1F0
	COMMA0R0
	COMMA0R1
	COMMA0R2
	COMMA1F0
	CharCode0R0
	CharCode0R1
	CharCode1R0
	CharCode1R1
	CharCode1R2
	CharCode1R3
	CharCode1R4
	CharCode1R5
	CharCode2F0
	ComPair0R0
	ComPair0R1
	ComPair0R2
	ComPair1F0
	ComVal0R0
	ComVal0R1
	ComVal0R2
	ComVal1F0
	EXP0R0
	EXP0R1
	EXP0R2
	EXP0R3
	EXP1F0
	Elements0R0
	Elements0R1
	Elements0R2
	Elements1F0
	EscOrComment0R0
	EscOrComment0R1
	EscOrComment1R0
	EscOrComment1R1
	EscOrComment2R0
	EscOrComment2R1
	EscOrComment3R0
	FALSE0R0
	FALSE0R1
	FALSE0R2
	FALSE1F0
	FRAC0R0
	FRAC0R1
	FRAC0R2
	FRAC1F0
	INT0R0
	INT0R1
	INT0R2
	INT1F0
	Integers0R0
	Integers0R1
	Integers1R0
	Integers1R1
	Integers2F0
	JSON0R0
	JSON0R1
	JSON0R2
	JSON1F0
	LBRACE0R0
	LBRACE0R1
	LBRACE0R2
	LBRACE1F0
	LBRACKET0R0
	LBRACKET0R1
	LBRACKET0R2
	LBRACKET1F0
	Members0R0
	Members0R1
	Members0R2
	Members1F0
	NUL0R0
	NUL0R1
	NUL0R2
	NUL1F0
	Neg0R0
	Neg0R1
	Neg1F0
	NumSeq0R0
	NumSeq0R1
	NumSeq0R2
	NumSeq1F0
	Number0R0
	Number0R1
	Number0R2
	Number0R3
	Number0R4
	Number1F0
	Object0R0
	Object0R1
	Object0R2
	Object0R3
	Object1F0
	Pair0R0
	Pair0R1
	Pair0R2
	Pair0R3
	Pair1F0
	PlusORMinus0R0
	PlusORMinus0R1
	PlusORMinus1M0
	PlusORMinus1R0
	PlusORMinus1R1
	PlusORMinus2F0
	RBRACE0R0
	RBRACE0R1
	RBRACE0R2
	RBRACE1F0
	RBRACKET0R0
	RBRACKET0R1
	RBRACKET0R2
	RBRACKET1F0
	String0R0
	String0R1
	String0R2
	String0R3
	String0R4
	String1F0
	Suff1xchar0R0
	Suff1xchar0R1
	Suff1xchar0R2
	Suff1xchar1F0
	SuffCHAR0R0
	SuffCHAR0R1
	SuffCHAR0R2
	SuffCHAR1R0
	SuffComPair0R0
	SuffComPair0R1
	SuffComPair0R2
	SuffComPair1R0
	SuffComVal0R0
	SuffComVal0R1
	SuffComVal0R2
	SuffComVal1R0
	SuffEXP0R0
	SuffEXP0R1
	SuffEXP1R0
	SuffElements0R0
	SuffElements0R1
	SuffElements1R0
	SuffFRAC0R0
	SuffFRAC0R1
	SuffFRAC1R0
	SuffMembers0R0
	SuffMembers0R1
	SuffMembers1R0
	SuffNeg0R0
	SuffNeg0R1
	SuffNeg1R0
	SuffPlusORMinus0R0
	SuffPlusORMinus0R1
	SuffPlusORMinus1R0
	Suffchar0R0
	Suffchar0R1
	Suffchar0R2
	Suffchar1R0
	Suffnum0R0
	Suffnum0R1
	Suffnum0R2
	Suffnum1R0
	TRUE0R0
	TRUE0R1
	TRUE0R2
	TRUE1F0
	Value0R0
	Value0R1
	Value1R0
	Value1R1
	Value2R0
	Value2R1
	Value3R0
	Value3R1
	Value4R0
	Value4R1
	Value5R0
	Value5R1
	Value6R0
	Value6R1
	Value7F0
	WS0R0
	WS0R1
	WS0R2
	WS1R0
)

type Slot struct {
	NT      symbols.NT
	Alt     int
	Pos     int
	Symbols symbols.Symbols
	Label 	Label
}

type Index struct {
	NT      symbols.NT
	Alt     int
	Pos     int
}

func GetAlternates(nt symbols.NT) []Label {
	alts, exist := alternates[nt]
	if !exist {
		panic(fmt.Sprintf("Invalid NT %s", nt))
	}
	return alts
}

func GetLabel(nt symbols.NT, alt, pos int) Label {
	l, exist := slotIndex[Index{nt,alt,pos}]
	if exist {
		return l
	}
	panic(fmt.Sprintf("Error: no slot label for NT=%s, alt=%d, pos=%d", nt, alt, pos))
}

func (l Label) EoR() bool {
	return l.Slot().EoR()
}

func (l Label) Head() symbols.NT {
	return l.Slot().NT
}

func (l Label) Index() Index {
	s := l.Slot()
	return Index{s.NT, s.Alt, s.Pos}
}

func (l Label) Alternate() int {
	return l.Slot().Alt
}

func (l Label) Pos() int {
	return l.Slot().Pos
}

func (l Label) Slot() *Slot {
	s, exist := slots[l]
	if !exist {
		panic(fmt.Sprintf("Invalid slot label %d", l))
	}
	return s
}

func (l Label) String() string {
	return l.Slot().String()
}

func (l Label) Symbols() symbols.Symbols {
	return l.Slot().Symbols
}

func (l Label) IsNullable() bool {
	return nullable[l]
}

func (l Label) FirstContains(typ token.Type) bool {
	return firstT[l][typ]
}

func (l Label) IsLookahead() bool {
	s := l.Slot()
	return s.Pos > 0 && s.Symbols[s.Pos-1].IsLookahead()
}

func (s *Slot) EoR() bool {
	return s.Pos >= len(s.Symbols)
}

func (s *Slot) Successor() *Slot {
	if s.EoR() {
		return nil
	} else {
		// TODO try slots[s.Label + 1]
		return slots[slotIndex[Index{s.NT,s.Alt,s.Pos+1}]]
	}
}

func (s *Slot) String() string {
	buf := new(bytes.Buffer)
	fmt.Fprintf(buf, "%s : ", s.NT)
	for i, sym := range s.Symbols {
		if i == s.Pos {
			fmt.Fprintf(buf, "∙")
		}
		fmt.Fprintf(buf, "%s ", sym)
	}
	if s.Pos >= len(s.Symbols) {
		fmt.Fprintf(buf, "∙")
	}
	return buf.String()
}

var slots = map[Label]*Slot{ 
	Array0R0: {
		symbols.NT_Array, 0, 0, 
		symbols.Symbols{  
			symbols.NT_LBRACKET, 
			symbols.NT_SuffElements, 
			symbols.NT_RBRACKET,
		}, 
		Array0R0, 
	},
	Array0R1: {
		symbols.NT_Array, 0, 1, 
		symbols.Symbols{  
			symbols.NT_LBRACKET, 
			symbols.NT_SuffElements, 
			symbols.NT_RBRACKET,
		}, 
		Array0R1, 
	},
	Array0R2: {
		symbols.NT_Array, 0, 2, 
		symbols.Symbols{  
			symbols.NT_LBRACKET, 
			symbols.NT_SuffElements, 
			symbols.NT_RBRACKET,
		}, 
		Array0R2, 
	},
	Array0R3: {
		symbols.NT_Array, 0, 3, 
		symbols.Symbols{  
			symbols.NT_LBRACKET, 
			symbols.NT_SuffElements, 
			symbols.NT_RBRACKET,
		}, 
		Array0R3, 
	},
	Array1F0: {
		symbols.NT_Array, 1, 0, 
		symbols.Symbols{ 
		}, 
		Array1F0, 
	},
	CHAR0R0: {
		symbols.NT_CHAR, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Suff1xchar, 
			symbols.NT_Suffchar,
		}, 
		CHAR0R0, 
	},
	CHAR0R1: {
		symbols.NT_CHAR, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Suff1xchar, 
			symbols.NT_Suffchar,
		}, 
		CHAR0R1, 
	},
	CHAR0R2: {
		symbols.NT_CHAR, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Suff1xchar, 
			symbols.NT_Suffchar,
		}, 
		CHAR0R2, 
	},
	CHAR1R0: {
		symbols.NT_CHAR, 1, 0, 
		symbols.Symbols{  
			symbols.T_8, 
			symbols.NT_CharCode,
		}, 
		CHAR1R0, 
	},
	CHAR1R1: {
		symbols.NT_CHAR, 1, 1, 
		symbols.Symbols{  
			symbols.T_8, 
			symbols.NT_CharCode,
		}, 
		CHAR1R1, 
	},
	CHAR1R2: {
		symbols.NT_CHAR, 1, 2, 
		symbols.Symbols{  
			symbols.T_8, 
			symbols.NT_CharCode,
		}, 
		CHAR1R2, 
	},
	CHAR2F0: {
		symbols.NT_CHAR, 2, 0, 
		symbols.Symbols{ 
		}, 
		CHAR2F0, 
	},
	COLON0R0: {
		symbols.NT_COLON, 0, 0, 
		symbols.Symbols{  
			symbols.T_5, 
			symbols.NT_WS,
		}, 
		COLON0R0, 
	},
	COLON0R1: {
		symbols.NT_COLON, 0, 1, 
		symbols.Symbols{  
			symbols.T_5, 
			symbols.NT_WS,
		}, 
		COLON0R1, 
	},
	COLON0R2: {
		symbols.NT_COLON, 0, 2, 
		symbols.Symbols{  
			symbols.T_5, 
			symbols.NT_WS,
		}, 
		COLON0R2, 
	},
	COLON1F0: {
		symbols.NT_COLON, 1, 0, 
		symbols.Symbols{ 
		}, 
		COLON1F0, 
	},
	COMMA0R0: {
		symbols.NT_COMMA, 0, 0, 
		symbols.Symbols{  
			symbols.T_1, 
			symbols.NT_WS,
		}, 
		COMMA0R0, 
	},
	COMMA0R1: {
		symbols.NT_COMMA, 0, 1, 
		symbols.Symbols{  
			symbols.T_1, 
			symbols.NT_WS,
		}, 
		COMMA0R1, 
	},
	COMMA0R2: {
		symbols.NT_COMMA, 0, 2, 
		symbols.Symbols{  
			symbols.T_1, 
			symbols.NT_WS,
		}, 
		COMMA0R2, 
	},
	COMMA1F0: {
		symbols.NT_COMMA, 1, 0, 
		symbols.Symbols{ 
		}, 
		COMMA1F0, 
	},
	CharCode0R0: {
		symbols.NT_CharCode, 0, 0, 
		symbols.Symbols{  
			symbols.T_13,
		}, 
		CharCode0R0, 
	},
	CharCode0R1: {
		symbols.NT_CharCode, 0, 1, 
		symbols.Symbols{  
			symbols.T_13,
		}, 
		CharCode0R1, 
	},
	CharCode1R0: {
		symbols.NT_CharCode, 1, 0, 
		symbols.Symbols{  
			symbols.T_22, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16,
		}, 
		CharCode1R0, 
	},
	CharCode1R1: {
		symbols.NT_CharCode, 1, 1, 
		symbols.Symbols{  
			symbols.T_22, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16,
		}, 
		CharCode1R1, 
	},
	CharCode1R2: {
		symbols.NT_CharCode, 1, 2, 
		symbols.Symbols{  
			symbols.T_22, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16,
		}, 
		CharCode1R2, 
	},
	CharCode1R3: {
		symbols.NT_CharCode, 1, 3, 
		symbols.Symbols{  
			symbols.T_22, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16,
		}, 
		CharCode1R3, 
	},
	CharCode1R4: {
		symbols.NT_CharCode, 1, 4, 
		symbols.Symbols{  
			symbols.T_22, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16,
		}, 
		CharCode1R4, 
	},
	CharCode1R5: {
		symbols.NT_CharCode, 1, 5, 
		symbols.Symbols{  
			symbols.T_22, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16, 
			symbols.T_16,
		}, 
		CharCode1R5, 
	},
	CharCode2F0: {
		symbols.NT_CharCode, 2, 0, 
		symbols.Symbols{ 
		}, 
		CharCode2F0, 
	},
	ComPair0R0: {
		symbols.NT_ComPair, 0, 0, 
		symbols.Symbols{  
			symbols.NT_COMMA, 
			symbols.NT_Pair,
		}, 
		ComPair0R0, 
	},
	ComPair0R1: {
		symbols.NT_ComPair, 0, 1, 
		symbols.Symbols{  
			symbols.NT_COMMA, 
			symbols.NT_Pair,
		}, 
		ComPair0R1, 
	},
	ComPair0R2: {
		symbols.NT_ComPair, 0, 2, 
		symbols.Symbols{  
			symbols.NT_COMMA, 
			symbols.NT_Pair,
		}, 
		ComPair0R2, 
	},
	ComPair1F0: {
		symbols.NT_ComPair, 1, 0, 
		symbols.Symbols{ 
		}, 
		ComPair1F0, 
	},
	ComVal0R0: {
		symbols.NT_ComVal, 0, 0, 
		symbols.Symbols{  
			symbols.NT_COMMA, 
			symbols.NT_Value,
		}, 
		ComVal0R0, 
	},
	ComVal0R1: {
		symbols.NT_ComVal, 0, 1, 
		symbols.Symbols{  
			symbols.NT_COMMA, 
			symbols.NT_Value,
		}, 
		ComVal0R1, 
	},
	ComVal0R2: {
		symbols.NT_ComVal, 0, 2, 
		symbols.Symbols{  
			symbols.NT_COMMA, 
			symbols.NT_Value,
		}, 
		ComVal0R2, 
	},
	ComVal1F0: {
		symbols.NT_ComVal, 1, 0, 
		symbols.Symbols{ 
		}, 
		ComVal1F0, 
	},
	EXP0R0: {
		symbols.NT_EXP, 0, 0, 
		symbols.Symbols{  
			symbols.T_12, 
			symbols.NT_SuffPlusORMinus, 
			symbols.T_20,
		}, 
		EXP0R0, 
	},
	EXP0R1: {
		symbols.NT_EXP, 0, 1, 
		symbols.Symbols{  
			symbols.T_12, 
			symbols.NT_SuffPlusORMinus, 
			symbols.T_20,
		}, 
		EXP0R1, 
	},
	EXP0R2: {
		symbols.NT_EXP, 0, 2, 
		symbols.Symbols{  
			symbols.T_12, 
			symbols.NT_SuffPlusORMinus, 
			symbols.T_20,
		}, 
		EXP0R2, 
	},
	EXP0R3: {
		symbols.NT_EXP, 0, 3, 
		symbols.Symbols{  
			symbols.T_12, 
			symbols.NT_SuffPlusORMinus, 
			symbols.T_20,
		}, 
		EXP0R3, 
	},
	EXP1F0: {
		symbols.NT_EXP, 1, 0, 
		symbols.Symbols{ 
		}, 
		EXP1F0, 
	},
	Elements0R0: {
		symbols.NT_Elements, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Value, 
			symbols.NT_SuffComVal,
		}, 
		Elements0R0, 
	},
	Elements0R1: {
		symbols.NT_Elements, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Value, 
			symbols.NT_SuffComVal,
		}, 
		Elements0R1, 
	},
	Elements0R2: {
		symbols.NT_Elements, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Value, 
			symbols.NT_SuffComVal,
		}, 
		Elements0R2, 
	},
	Elements1F0: {
		symbols.NT_Elements, 1, 0, 
		symbols.Symbols{ 
		}, 
		Elements1F0, 
	},
	EscOrComment0R0: {
		symbols.NT_EscOrComment, 0, 0, 
		symbols.Symbols{  
			symbols.T_14,
		}, 
		EscOrComment0R0, 
	},
	EscOrComment0R1: {
		symbols.NT_EscOrComment, 0, 1, 
		symbols.Symbols{  
			symbols.T_14,
		}, 
		EscOrComment0R1, 
	},
	EscOrComment1R0: {
		symbols.NT_EscOrComment, 1, 0, 
		symbols.Symbols{  
			symbols.T_17,
		}, 
		EscOrComment1R0, 
	},
	EscOrComment1R1: {
		symbols.NT_EscOrComment, 1, 1, 
		symbols.Symbols{  
			symbols.T_17,
		}, 
		EscOrComment1R1, 
	},
	EscOrComment2R0: {
		symbols.NT_EscOrComment, 2, 0, 
		symbols.Symbols{  
			symbols.T_9,
		}, 
		EscOrComment2R0, 
	},
	EscOrComment2R1: {
		symbols.NT_EscOrComment, 2, 1, 
		symbols.Symbols{  
			symbols.T_9,
		}, 
		EscOrComment2R1, 
	},
	EscOrComment3R0: {
		symbols.NT_EscOrComment, 3, 0, 
		symbols.Symbols{ 
		}, 
		EscOrComment3R0, 
	},
	FALSE0R0: {
		symbols.NT_FALSE, 0, 0, 
		symbols.Symbols{  
			symbols.T_15, 
			symbols.NT_WS,
		}, 
		FALSE0R0, 
	},
	FALSE0R1: {
		symbols.NT_FALSE, 0, 1, 
		symbols.Symbols{  
			symbols.T_15, 
			symbols.NT_WS,
		}, 
		FALSE0R1, 
	},
	FALSE0R2: {
		symbols.NT_FALSE, 0, 2, 
		symbols.Symbols{  
			symbols.T_15, 
			symbols.NT_WS,
		}, 
		FALSE0R2, 
	},
	FALSE1F0: {
		symbols.NT_FALSE, 1, 0, 
		symbols.Symbols{ 
		}, 
		FALSE1F0, 
	},
	FRAC0R0: {
		symbols.NT_FRAC, 0, 0, 
		symbols.Symbols{  
			symbols.T_3, 
			symbols.NT_Suffnum,
		}, 
		FRAC0R0, 
	},
	FRAC0R1: {
		symbols.NT_FRAC, 0, 1, 
		symbols.Symbols{  
			symbols.T_3, 
			symbols.NT_Suffnum,
		}, 
		FRAC0R1, 
	},
	FRAC0R2: {
		symbols.NT_FRAC, 0, 2, 
		symbols.Symbols{  
			symbols.T_3, 
			symbols.NT_Suffnum,
		}, 
		FRAC0R2, 
	},
	FRAC1F0: {
		symbols.NT_FRAC, 1, 0, 
		symbols.Symbols{ 
		}, 
		FRAC1F0, 
	},
	INT0R0: {
		symbols.NT_INT, 0, 0, 
		symbols.Symbols{  
			symbols.NT_SuffNeg, 
			symbols.NT_Integers,
		}, 
		INT0R0, 
	},
	INT0R1: {
		symbols.NT_INT, 0, 1, 
		symbols.Symbols{  
			symbols.NT_SuffNeg, 
			symbols.NT_Integers,
		}, 
		INT0R1, 
	},
	INT0R2: {
		symbols.NT_INT, 0, 2, 
		symbols.Symbols{  
			symbols.NT_SuffNeg, 
			symbols.NT_Integers,
		}, 
		INT0R2, 
	},
	INT1F0: {
		symbols.NT_INT, 1, 0, 
		symbols.Symbols{ 
		}, 
		INT1F0, 
	},
	Integers0R0: {
		symbols.NT_Integers, 0, 0, 
		symbols.Symbols{  
			symbols.NT_NumSeq,
		}, 
		Integers0R0, 
	},
	Integers0R1: {
		symbols.NT_Integers, 0, 1, 
		symbols.Symbols{  
			symbols.NT_NumSeq,
		}, 
		Integers0R1, 
	},
	Integers1R0: {
		symbols.NT_Integers, 1, 0, 
		symbols.Symbols{  
			symbols.T_4,
		}, 
		Integers1R0, 
	},
	Integers1R1: {
		symbols.NT_Integers, 1, 1, 
		symbols.Symbols{  
			symbols.T_4,
		}, 
		Integers1R1, 
	},
	Integers2F0: {
		symbols.NT_Integers, 2, 0, 
		symbols.Symbols{ 
		}, 
		Integers2F0, 
	},
	JSON0R0: {
		symbols.NT_JSON, 0, 0, 
		symbols.Symbols{  
			symbols.NT_WS, 
			symbols.NT_Object,
		}, 
		JSON0R0, 
	},
	JSON0R1: {
		symbols.NT_JSON, 0, 1, 
		symbols.Symbols{  
			symbols.NT_WS, 
			symbols.NT_Object,
		}, 
		JSON0R1, 
	},
	JSON0R2: {
		symbols.NT_JSON, 0, 2, 
		symbols.Symbols{  
			symbols.NT_WS, 
			symbols.NT_Object,
		}, 
		JSON0R2, 
	},
	JSON1F0: {
		symbols.NT_JSON, 1, 0, 
		symbols.Symbols{ 
		}, 
		JSON1F0, 
	},
	LBRACE0R0: {
		symbols.NT_LBRACE, 0, 0, 
		symbols.Symbols{  
			symbols.T_23, 
			symbols.NT_WS,
		}, 
		LBRACE0R0, 
	},
	LBRACE0R1: {
		symbols.NT_LBRACE, 0, 1, 
		symbols.Symbols{  
			symbols.T_23, 
			symbols.NT_WS,
		}, 
		LBRACE0R1, 
	},
	LBRACE0R2: {
		symbols.NT_LBRACE, 0, 2, 
		symbols.Symbols{  
			symbols.T_23, 
			symbols.NT_WS,
		}, 
		LBRACE0R2, 
	},
	LBRACE1F0: {
		symbols.NT_LBRACE, 1, 0, 
		symbols.Symbols{ 
		}, 
		LBRACE1F0, 
	},
	LBRACKET0R0: {
		symbols.NT_LBRACKET, 0, 0, 
		symbols.Symbols{  
			symbols.T_6, 
			symbols.NT_WS,
		}, 
		LBRACKET0R0, 
	},
	LBRACKET0R1: {
		symbols.NT_LBRACKET, 0, 1, 
		symbols.Symbols{  
			symbols.T_6, 
			symbols.NT_WS,
		}, 
		LBRACKET0R1, 
	},
	LBRACKET0R2: {
		symbols.NT_LBRACKET, 0, 2, 
		symbols.Symbols{  
			symbols.T_6, 
			symbols.NT_WS,
		}, 
		LBRACKET0R2, 
	},
	LBRACKET1F0: {
		symbols.NT_LBRACKET, 1, 0, 
		symbols.Symbols{ 
		}, 
		LBRACKET1F0, 
	},
	Members0R0: {
		symbols.NT_Members, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Pair, 
			symbols.NT_SuffComPair,
		}, 
		Members0R0, 
	},
	Members0R1: {
		symbols.NT_Members, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Pair, 
			symbols.NT_SuffComPair,
		}, 
		Members0R1, 
	},
	Members0R2: {
		symbols.NT_Members, 0, 2, 
		symbols.Symbols{  
			symbols.NT_Pair, 
			symbols.NT_SuffComPair,
		}, 
		Members0R2, 
	},
	Members1F0: {
		symbols.NT_Members, 1, 0, 
		symbols.Symbols{ 
		}, 
		Members1F0, 
	},
	NUL0R0: {
		symbols.NT_NUL, 0, 0, 
		symbols.Symbols{  
			symbols.T_19, 
			symbols.NT_WS,
		}, 
		NUL0R0, 
	},
	NUL0R1: {
		symbols.NT_NUL, 0, 1, 
		symbols.Symbols{  
			symbols.T_19, 
			symbols.NT_WS,
		}, 
		NUL0R1, 
	},
	NUL0R2: {
		symbols.NT_NUL, 0, 2, 
		symbols.Symbols{  
			symbols.T_19, 
			symbols.NT_WS,
		}, 
		NUL0R2, 
	},
	NUL1F0: {
		symbols.NT_NUL, 1, 0, 
		symbols.Symbols{ 
		}, 
		NUL1F0, 
	},
	Neg0R0: {
		symbols.NT_Neg, 0, 0, 
		symbols.Symbols{  
			symbols.T_2,
		}, 
		Neg0R0, 
	},
	Neg0R1: {
		symbols.NT_Neg, 0, 1, 
		symbols.Symbols{  
			symbols.T_2,
		}, 
		Neg0R1, 
	},
	Neg1F0: {
		symbols.NT_Neg, 1, 0, 
		symbols.Symbols{ 
		}, 
		Neg1F0, 
	},
	NumSeq0R0: {
		symbols.NT_NumSeq, 0, 0, 
		symbols.Symbols{  
			symbols.T_18, 
			symbols.NT_Suffnum,
		}, 
		NumSeq0R0, 
	},
	NumSeq0R1: {
		symbols.NT_NumSeq, 0, 1, 
		symbols.Symbols{  
			symbols.T_18, 
			symbols.NT_Suffnum,
		}, 
		NumSeq0R1, 
	},
	NumSeq0R2: {
		symbols.NT_NumSeq, 0, 2, 
		symbols.Symbols{  
			symbols.T_18, 
			symbols.NT_Suffnum,
		}, 
		NumSeq0R2, 
	},
	NumSeq1F0: {
		symbols.NT_NumSeq, 1, 0, 
		symbols.Symbols{ 
		}, 
		NumSeq1F0, 
	},
	Number0R0: {
		symbols.NT_Number, 0, 0, 
		symbols.Symbols{  
			symbols.NT_INT, 
			symbols.NT_SuffFRAC, 
			symbols.NT_SuffEXP, 
			symbols.NT_WS,
		}, 
		Number0R0, 
	},
	Number0R1: {
		symbols.NT_Number, 0, 1, 
		symbols.Symbols{  
			symbols.NT_INT, 
			symbols.NT_SuffFRAC, 
			symbols.NT_SuffEXP, 
			symbols.NT_WS,
		}, 
		Number0R1, 
	},
	Number0R2: {
		symbols.NT_Number, 0, 2, 
		symbols.Symbols{  
			symbols.NT_INT, 
			symbols.NT_SuffFRAC, 
			symbols.NT_SuffEXP, 
			symbols.NT_WS,
		}, 
		Number0R2, 
	},
	Number0R3: {
		symbols.NT_Number, 0, 3, 
		symbols.Symbols{  
			symbols.NT_INT, 
			symbols.NT_SuffFRAC, 
			symbols.NT_SuffEXP, 
			symbols.NT_WS,
		}, 
		Number0R3, 
	},
	Number0R4: {
		symbols.NT_Number, 0, 4, 
		symbols.Symbols{  
			symbols.NT_INT, 
			symbols.NT_SuffFRAC, 
			symbols.NT_SuffEXP, 
			symbols.NT_WS,
		}, 
		Number0R4, 
	},
	Number1F0: {
		symbols.NT_Number, 1, 0, 
		symbols.Symbols{ 
		}, 
		Number1F0, 
	},
	Object0R0: {
		symbols.NT_Object, 0, 0, 
		symbols.Symbols{  
			symbols.NT_LBRACE, 
			symbols.NT_SuffMembers, 
			symbols.NT_RBRACE,
		}, 
		Object0R0, 
	},
	Object0R1: {
		symbols.NT_Object, 0, 1, 
		symbols.Symbols{  
			symbols.NT_LBRACE, 
			symbols.NT_SuffMembers, 
			symbols.NT_RBRACE,
		}, 
		Object0R1, 
	},
	Object0R2: {
		symbols.NT_Object, 0, 2, 
		symbols.Symbols{  
			symbols.NT_LBRACE, 
			symbols.NT_SuffMembers, 
			symbols.NT_RBRACE,
		}, 
		Object0R2, 
	},
	Object0R3: {
		symbols.NT_Object, 0, 3, 
		symbols.Symbols{  
			symbols.NT_LBRACE, 
			symbols.NT_SuffMembers, 
			symbols.NT_RBRACE,
		}, 
		Object0R3, 
	},
	Object1F0: {
		symbols.NT_Object, 1, 0, 
		symbols.Symbols{ 
		}, 
		Object1F0, 
	},
	Pair0R0: {
		symbols.NT_Pair, 0, 0, 
		symbols.Symbols{  
			symbols.NT_String, 
			symbols.NT_COLON, 
			symbols.NT_Value,
		}, 
		Pair0R0, 
	},
	Pair0R1: {
		symbols.NT_Pair, 0, 1, 
		symbols.Symbols{  
			symbols.NT_String, 
			symbols.NT_COLON, 
			symbols.NT_Value,
		}, 
		Pair0R1, 
	},
	Pair0R2: {
		symbols.NT_Pair, 0, 2, 
		symbols.Symbols{  
			symbols.NT_String, 
			symbols.NT_COLON, 
			symbols.NT_Value,
		}, 
		Pair0R2, 
	},
	Pair0R3: {
		symbols.NT_Pair, 0, 3, 
		symbols.Symbols{  
			symbols.NT_String, 
			symbols.NT_COLON, 
			symbols.NT_Value,
		}, 
		Pair0R3, 
	},
	Pair1F0: {
		symbols.NT_Pair, 1, 0, 
		symbols.Symbols{ 
		}, 
		Pair1F0, 
	},
	PlusORMinus0R0: {
		symbols.NT_PlusORMinus, 0, 0, 
		symbols.Symbols{  
			symbols.T_0,
		}, 
		PlusORMinus0R0, 
	},
	PlusORMinus0R1: {
		symbols.NT_PlusORMinus, 0, 1, 
		symbols.Symbols{  
			symbols.T_0,
		}, 
		PlusORMinus0R1, 
	},
	PlusORMinus1M0: {
		symbols.NT_PlusORMinus, 1, 0, 
		symbols.Symbols{  
			symbols.T_2,
		}, 
		PlusORMinus1M0, 
	},
	PlusORMinus1R0: {
		symbols.NT_PlusORMinus, 1, 0, 
		symbols.Symbols{  
			symbols.T_2,
		}, 
		PlusORMinus1R0, 
	},
	PlusORMinus1R1: {
		symbols.NT_PlusORMinus, 1, 1, 
		symbols.Symbols{  
			symbols.T_2,
		}, 
		PlusORMinus1R1, 
	},
	PlusORMinus2F0: {
		symbols.NT_PlusORMinus, 2, 0, 
		symbols.Symbols{ 
		}, 
		PlusORMinus2F0, 
	},
	RBRACE0R0: {
		symbols.NT_RBRACE, 0, 0, 
		symbols.Symbols{  
			symbols.T_24, 
			symbols.NT_WS,
		}, 
		RBRACE0R0, 
	},
	RBRACE0R1: {
		symbols.NT_RBRACE, 0, 1, 
		symbols.Symbols{  
			symbols.T_24, 
			symbols.NT_WS,
		}, 
		RBRACE0R1, 
	},
	RBRACE0R2: {
		symbols.NT_RBRACE, 0, 2, 
		symbols.Symbols{  
			symbols.T_24, 
			symbols.NT_WS,
		}, 
		RBRACE0R2, 
	},
	RBRACE1F0: {
		symbols.NT_RBRACE, 1, 0, 
		symbols.Symbols{ 
		}, 
		RBRACE1F0, 
	},
	RBRACKET0R0: {
		symbols.NT_RBRACKET, 0, 0, 
		symbols.Symbols{  
			symbols.T_7, 
			symbols.NT_WS,
		}, 
		RBRACKET0R0, 
	},
	RBRACKET0R1: {
		symbols.NT_RBRACKET, 0, 1, 
		symbols.Symbols{  
			symbols.T_7, 
			symbols.NT_WS,
		}, 
		RBRACKET0R1, 
	},
	RBRACKET0R2: {
		symbols.NT_RBRACKET, 0, 2, 
		symbols.Symbols{  
			symbols.T_7, 
			symbols.NT_WS,
		}, 
		RBRACKET0R2, 
	},
	RBRACKET1F0: {
		symbols.NT_RBRACKET, 1, 0, 
		symbols.Symbols{ 
		}, 
		RBRACKET1F0, 
	},
	String0R0: {
		symbols.NT_String, 0, 0, 
		symbols.Symbols{  
			symbols.T_11, 
			symbols.NT_SuffCHAR, 
			symbols.T_11, 
			symbols.NT_WS,
		}, 
		String0R0, 
	},
	String0R1: {
		symbols.NT_String, 0, 1, 
		symbols.Symbols{  
			symbols.T_11, 
			symbols.NT_SuffCHAR, 
			symbols.T_11, 
			symbols.NT_WS,
		}, 
		String0R1, 
	},
	String0R2: {
		symbols.NT_String, 0, 2, 
		symbols.Symbols{  
			symbols.T_11, 
			symbols.NT_SuffCHAR, 
			symbols.T_11, 
			symbols.NT_WS,
		}, 
		String0R2, 
	},
	String0R3: {
		symbols.NT_String, 0, 3, 
		symbols.Symbols{  
			symbols.T_11, 
			symbols.NT_SuffCHAR, 
			symbols.T_11, 
			symbols.NT_WS,
		}, 
		String0R3, 
	},
	String0R4: {
		symbols.NT_String, 0, 4, 
		symbols.Symbols{  
			symbols.T_11, 
			symbols.NT_SuffCHAR, 
			symbols.T_11, 
			symbols.NT_WS,
		}, 
		String0R4, 
	},
	String1F0: {
		symbols.NT_String, 1, 0, 
		symbols.Symbols{ 
		}, 
		String1F0, 
	},
	Suff1xchar0R0: {
		symbols.NT_Suff1xchar, 0, 0, 
		symbols.Symbols{  
			symbols.T_10, 
			symbols.NT_Suffchar,
		}, 
		Suff1xchar0R0, 
	},
	Suff1xchar0R1: {
		symbols.NT_Suff1xchar, 0, 1, 
		symbols.Symbols{  
			symbols.T_10, 
			symbols.NT_Suffchar,
		}, 
		Suff1xchar0R1, 
	},
	Suff1xchar0R2: {
		symbols.NT_Suff1xchar, 0, 2, 
		symbols.Symbols{  
			symbols.T_10, 
			symbols.NT_Suffchar,
		}, 
		Suff1xchar0R2, 
	},
	Suff1xchar1F0: {
		symbols.NT_Suff1xchar, 1, 0, 
		symbols.Symbols{ 
		}, 
		Suff1xchar1F0, 
	},
	SuffCHAR0R0: {
		symbols.NT_SuffCHAR, 0, 0, 
		symbols.Symbols{  
			symbols.NT_CHAR, 
			symbols.NT_SuffCHAR,
		}, 
		SuffCHAR0R0, 
	},
	SuffCHAR0R1: {
		symbols.NT_SuffCHAR, 0, 1, 
		symbols.Symbols{  
			symbols.NT_CHAR, 
			symbols.NT_SuffCHAR,
		}, 
		SuffCHAR0R1, 
	},
	SuffCHAR0R2: {
		symbols.NT_SuffCHAR, 0, 2, 
		symbols.Symbols{  
			symbols.NT_CHAR, 
			symbols.NT_SuffCHAR,
		}, 
		SuffCHAR0R2, 
	},
	SuffCHAR1R0: {
		symbols.NT_SuffCHAR, 1, 0, 
		symbols.Symbols{ 
		}, 
		SuffCHAR1R0, 
	},
	SuffComPair0R0: {
		symbols.NT_SuffComPair, 0, 0, 
		symbols.Symbols{  
			symbols.NT_ComPair, 
			symbols.NT_SuffComPair,
		}, 
		SuffComPair0R0, 
	},
	SuffComPair0R1: {
		symbols.NT_SuffComPair, 0, 1, 
		symbols.Symbols{  
			symbols.NT_ComPair, 
			symbols.NT_SuffComPair,
		}, 
		SuffComPair0R1, 
	},
	SuffComPair0R2: {
		symbols.NT_SuffComPair, 0, 2, 
		symbols.Symbols{  
			symbols.NT_ComPair, 
			symbols.NT_SuffComPair,
		}, 
		SuffComPair0R2, 
	},
	SuffComPair1R0: {
		symbols.NT_SuffComPair, 1, 0, 
		symbols.Symbols{ 
		}, 
		SuffComPair1R0, 
	},
	SuffComVal0R0: {
		symbols.NT_SuffComVal, 0, 0, 
		symbols.Symbols{  
			symbols.NT_ComVal, 
			symbols.NT_SuffComVal,
		}, 
		SuffComVal0R0, 
	},
	SuffComVal0R1: {
		symbols.NT_SuffComVal, 0, 1, 
		symbols.Symbols{  
			symbols.NT_ComVal, 
			symbols.NT_SuffComVal,
		}, 
		SuffComVal0R1, 
	},
	SuffComVal0R2: {
		symbols.NT_SuffComVal, 0, 2, 
		symbols.Symbols{  
			symbols.NT_ComVal, 
			symbols.NT_SuffComVal,
		}, 
		SuffComVal0R2, 
	},
	SuffComVal1R0: {
		symbols.NT_SuffComVal, 1, 0, 
		symbols.Symbols{ 
		}, 
		SuffComVal1R0, 
	},
	SuffEXP0R0: {
		symbols.NT_SuffEXP, 0, 0, 
		symbols.Symbols{  
			symbols.NT_EXP,
		}, 
		SuffEXP0R0, 
	},
	SuffEXP0R1: {
		symbols.NT_SuffEXP, 0, 1, 
		symbols.Symbols{  
			symbols.NT_EXP,
		}, 
		SuffEXP0R1, 
	},
	SuffEXP1R0: {
		symbols.NT_SuffEXP, 1, 0, 
		symbols.Symbols{ 
		}, 
		SuffEXP1R0, 
	},
	SuffElements0R0: {
		symbols.NT_SuffElements, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Elements,
		}, 
		SuffElements0R0, 
	},
	SuffElements0R1: {
		symbols.NT_SuffElements, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Elements,
		}, 
		SuffElements0R1, 
	},
	SuffElements1R0: {
		symbols.NT_SuffElements, 1, 0, 
		symbols.Symbols{ 
		}, 
		SuffElements1R0, 
	},
	SuffFRAC0R0: {
		symbols.NT_SuffFRAC, 0, 0, 
		symbols.Symbols{  
			symbols.NT_FRAC,
		}, 
		SuffFRAC0R0, 
	},
	SuffFRAC0R1: {
		symbols.NT_SuffFRAC, 0, 1, 
		symbols.Symbols{  
			symbols.NT_FRAC,
		}, 
		SuffFRAC0R1, 
	},
	SuffFRAC1R0: {
		symbols.NT_SuffFRAC, 1, 0, 
		symbols.Symbols{ 
		}, 
		SuffFRAC1R0, 
	},
	SuffMembers0R0: {
		symbols.NT_SuffMembers, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Members,
		}, 
		SuffMembers0R0, 
	},
	SuffMembers0R1: {
		symbols.NT_SuffMembers, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Members,
		}, 
		SuffMembers0R1, 
	},
	SuffMembers1R0: {
		symbols.NT_SuffMembers, 1, 0, 
		symbols.Symbols{ 
		}, 
		SuffMembers1R0, 
	},
	SuffNeg0R0: {
		symbols.NT_SuffNeg, 0, 0, 
		symbols.Symbols{  
			symbols.NT_Neg,
		}, 
		SuffNeg0R0, 
	},
	SuffNeg0R1: {
		symbols.NT_SuffNeg, 0, 1, 
		symbols.Symbols{  
			symbols.NT_Neg,
		}, 
		SuffNeg0R1, 
	},
	SuffNeg1R0: {
		symbols.NT_SuffNeg, 1, 0, 
		symbols.Symbols{ 
		}, 
		SuffNeg1R0, 
	},
	SuffPlusORMinus0R0: {
		symbols.NT_SuffPlusORMinus, 0, 0, 
		symbols.Symbols{  
			symbols.NT_PlusORMinus,
		}, 
		SuffPlusORMinus0R0, 
	},
	SuffPlusORMinus0R1: {
		symbols.NT_SuffPlusORMinus, 0, 1, 
		symbols.Symbols{  
			symbols.NT_PlusORMinus,
		}, 
		SuffPlusORMinus0R1, 
	},
	SuffPlusORMinus1R0: {
		symbols.NT_SuffPlusORMinus, 1, 0, 
		symbols.Symbols{ 
		}, 
		SuffPlusORMinus1R0, 
	},
	Suffchar0R0: {
		symbols.NT_Suffchar, 0, 0, 
		symbols.Symbols{  
			symbols.T_10, 
			symbols.NT_Suffchar,
		}, 
		Suffchar0R0, 
	},
	Suffchar0R1: {
		symbols.NT_Suffchar, 0, 1, 
		symbols.Symbols{  
			symbols.T_10, 
			symbols.NT_Suffchar,
		}, 
		Suffchar0R1, 
	},
	Suffchar0R2: {
		symbols.NT_Suffchar, 0, 2, 
		symbols.Symbols{  
			symbols.T_10, 
			symbols.NT_Suffchar,
		}, 
		Suffchar0R2, 
	},
	Suffchar1R0: {
		symbols.NT_Suffchar, 1, 0, 
		symbols.Symbols{ 
		}, 
		Suffchar1R0, 
	},
	Suffnum0R0: {
		symbols.NT_Suffnum, 0, 0, 
		symbols.Symbols{  
			symbols.T_20, 
			symbols.NT_Suffnum,
		}, 
		Suffnum0R0, 
	},
	Suffnum0R1: {
		symbols.NT_Suffnum, 0, 1, 
		symbols.Symbols{  
			symbols.T_20, 
			symbols.NT_Suffnum,
		}, 
		Suffnum0R1, 
	},
	Suffnum0R2: {
		symbols.NT_Suffnum, 0, 2, 
		symbols.Symbols{  
			symbols.T_20, 
			symbols.NT_Suffnum,
		}, 
		Suffnum0R2, 
	},
	Suffnum1R0: {
		symbols.NT_Suffnum, 1, 0, 
		symbols.Symbols{ 
		}, 
		Suffnum1R0, 
	},
	TRUE0R0: {
		symbols.NT_TRUE, 0, 0, 
		symbols.Symbols{  
			symbols.T_21, 
			symbols.NT_WS,
		}, 
		TRUE0R0, 
	},
	TRUE0R1: {
		symbols.NT_TRUE, 0, 1, 
		symbols.Symbols{  
			symbols.T_21, 
			symbols.NT_WS,
		}, 
		TRUE0R1, 
	},
	TRUE0R2: {
		symbols.NT_TRUE, 0, 2, 
		symbols.Symbols{  
			symbols.T_21, 
			symbols.NT_WS,
		}, 
		TRUE0R2, 
	},
	TRUE1F0: {
		symbols.NT_TRUE, 1, 0, 
		symbols.Symbols{ 
		}, 
		TRUE1F0, 
	},
	Value0R0: {
		symbols.NT_Value, 0, 0, 
		symbols.Symbols{  
			symbols.NT_String,
		}, 
		Value0R0, 
	},
	Value0R1: {
		symbols.NT_Value, 0, 1, 
		symbols.Symbols{  
			symbols.NT_String,
		}, 
		Value0R1, 
	},
	Value1R0: {
		symbols.NT_Value, 1, 0, 
		symbols.Symbols{  
			symbols.NT_Number,
		}, 
		Value1R0, 
	},
	Value1R1: {
		symbols.NT_Value, 1, 1, 
		symbols.Symbols{  
			symbols.NT_Number,
		}, 
		Value1R1, 
	},
	Value2R0: {
		symbols.NT_Value, 2, 0, 
		symbols.Symbols{  
			symbols.NT_Object,
		}, 
		Value2R0, 
	},
	Value2R1: {
		symbols.NT_Value, 2, 1, 
		symbols.Symbols{  
			symbols.NT_Object,
		}, 
		Value2R1, 
	},
	Value3R0: {
		symbols.NT_Value, 3, 0, 
		symbols.Symbols{  
			symbols.NT_Array,
		}, 
		Value3R0, 
	},
	Value3R1: {
		symbols.NT_Value, 3, 1, 
		symbols.Symbols{  
			symbols.NT_Array,
		}, 
		Value3R1, 
	},
	Value4R0: {
		symbols.NT_Value, 4, 0, 
		symbols.Symbols{  
			symbols.NT_TRUE,
		}, 
		Value4R0, 
	},
	Value4R1: {
		symbols.NT_Value, 4, 1, 
		symbols.Symbols{  
			symbols.NT_TRUE,
		}, 
		Value4R1, 
	},
	Value5R0: {
		symbols.NT_Value, 5, 0, 
		symbols.Symbols{  
			symbols.NT_FALSE,
		}, 
		Value5R0, 
	},
	Value5R1: {
		symbols.NT_Value, 5, 1, 
		symbols.Symbols{  
			symbols.NT_FALSE,
		}, 
		Value5R1, 
	},
	Value6R0: {
		symbols.NT_Value, 6, 0, 
		symbols.Symbols{  
			symbols.NT_NUL,
		}, 
		Value6R0, 
	},
	Value6R1: {
		symbols.NT_Value, 6, 1, 
		symbols.Symbols{  
			symbols.NT_NUL,
		}, 
		Value6R1, 
	},
	Value7F0: {
		symbols.NT_Value, 7, 0, 
		symbols.Symbols{ 
		}, 
		Value7F0, 
	},
	WS0R0: {
		symbols.NT_WS, 0, 0, 
		symbols.Symbols{  
			symbols.NT_EscOrComment, 
			symbols.NT_WS,
		}, 
		WS0R0, 
	},
	WS0R1: {
		symbols.NT_WS, 0, 1, 
		symbols.Symbols{  
			symbols.NT_EscOrComment, 
			symbols.NT_WS,
		}, 
		WS0R1, 
	},
	WS0R2: {
		symbols.NT_WS, 0, 2, 
		symbols.Symbols{  
			symbols.NT_EscOrComment, 
			symbols.NT_WS,
		}, 
		WS0R2, 
	},
	WS1R0: {
		symbols.NT_WS, 1, 0, 
		symbols.Symbols{ 
		}, 
		WS1R0, 
	},
}

var slotIndex = map[Index]Label { 
	Index{ symbols.NT_Array,0,0 }: Array0R0,
	Index{ symbols.NT_Array,0,1 }: Array0R1,
	Index{ symbols.NT_Array,0,2 }: Array0R2,
	Index{ symbols.NT_Array,0,3 }: Array0R3,
	Index{ symbols.NT_Array,1,0 }: Array1F0,
	Index{ symbols.NT_CHAR,0,0 }: CHAR0R0,
	Index{ symbols.NT_CHAR,0,1 }: CHAR0R1,
	Index{ symbols.NT_CHAR,0,2 }: CHAR0R2,
	Index{ symbols.NT_CHAR,1,0 }: CHAR1R0,
	Index{ symbols.NT_CHAR,1,1 }: CHAR1R1,
	Index{ symbols.NT_CHAR,1,2 }: CHAR1R2,
	Index{ symbols.NT_CHAR,2,0 }: CHAR2F0,
	Index{ symbols.NT_COLON,0,0 }: COLON0R0,
	Index{ symbols.NT_COLON,0,1 }: COLON0R1,
	Index{ symbols.NT_COLON,0,2 }: COLON0R2,
	Index{ symbols.NT_COLON,1,0 }: COLON1F0,
	Index{ symbols.NT_COMMA,0,0 }: COMMA0R0,
	Index{ symbols.NT_COMMA,0,1 }: COMMA0R1,
	Index{ symbols.NT_COMMA,0,2 }: COMMA0R2,
	Index{ symbols.NT_COMMA,1,0 }: COMMA1F0,
	Index{ symbols.NT_CharCode,0,0 }: CharCode0R0,
	Index{ symbols.NT_CharCode,0,1 }: CharCode0R1,
	Index{ symbols.NT_CharCode,1,0 }: CharCode1R0,
	Index{ symbols.NT_CharCode,1,1 }: CharCode1R1,
	Index{ symbols.NT_CharCode,1,2 }: CharCode1R2,
	Index{ symbols.NT_CharCode,1,3 }: CharCode1R3,
	Index{ symbols.NT_CharCode,1,4 }: CharCode1R4,
	Index{ symbols.NT_CharCode,1,5 }: CharCode1R5,
	Index{ symbols.NT_CharCode,2,0 }: CharCode2F0,
	Index{ symbols.NT_ComPair,0,0 }: ComPair0R0,
	Index{ symbols.NT_ComPair,0,1 }: ComPair0R1,
	Index{ symbols.NT_ComPair,0,2 }: ComPair0R2,
	Index{ symbols.NT_ComPair,1,0 }: ComPair1F0,
	Index{ symbols.NT_ComVal,0,0 }: ComVal0R0,
	Index{ symbols.NT_ComVal,0,1 }: ComVal0R1,
	Index{ symbols.NT_ComVal,0,2 }: ComVal0R2,
	Index{ symbols.NT_ComVal,1,0 }: ComVal1F0,
	Index{ symbols.NT_EXP,0,0 }: EXP0R0,
	Index{ symbols.NT_EXP,0,1 }: EXP0R1,
	Index{ symbols.NT_EXP,0,2 }: EXP0R2,
	Index{ symbols.NT_EXP,0,3 }: EXP0R3,
	Index{ symbols.NT_EXP,1,0 }: EXP1F0,
	Index{ symbols.NT_Elements,0,0 }: Elements0R0,
	Index{ symbols.NT_Elements,0,1 }: Elements0R1,
	Index{ symbols.NT_Elements,0,2 }: Elements0R2,
	Index{ symbols.NT_Elements,1,0 }: Elements1F0,
	Index{ symbols.NT_EscOrComment,0,0 }: EscOrComment0R0,
	Index{ symbols.NT_EscOrComment,0,1 }: EscOrComment0R1,
	Index{ symbols.NT_EscOrComment,1,0 }: EscOrComment1R0,
	Index{ symbols.NT_EscOrComment,1,1 }: EscOrComment1R1,
	Index{ symbols.NT_EscOrComment,2,0 }: EscOrComment2R0,
	Index{ symbols.NT_EscOrComment,2,1 }: EscOrComment2R1,
	Index{ symbols.NT_EscOrComment,3,0 }: EscOrComment3R0,
	Index{ symbols.NT_FALSE,0,0 }: FALSE0R0,
	Index{ symbols.NT_FALSE,0,1 }: FALSE0R1,
	Index{ symbols.NT_FALSE,0,2 }: FALSE0R2,
	Index{ symbols.NT_FALSE,1,0 }: FALSE1F0,
	Index{ symbols.NT_FRAC,0,0 }: FRAC0R0,
	Index{ symbols.NT_FRAC,0,1 }: FRAC0R1,
	Index{ symbols.NT_FRAC,0,2 }: FRAC0R2,
	Index{ symbols.NT_FRAC,1,0 }: FRAC1F0,
	Index{ symbols.NT_INT,0,0 }: INT0R0,
	Index{ symbols.NT_INT,0,1 }: INT0R1,
	Index{ symbols.NT_INT,0,2 }: INT0R2,
	Index{ symbols.NT_INT,1,0 }: INT1F0,
	Index{ symbols.NT_Integers,0,0 }: Integers0R0,
	Index{ symbols.NT_Integers,0,1 }: Integers0R1,
	Index{ symbols.NT_Integers,1,0 }: Integers1R0,
	Index{ symbols.NT_Integers,1,1 }: Integers1R1,
	Index{ symbols.NT_Integers,2,0 }: Integers2F0,
	Index{ symbols.NT_JSON,0,0 }: JSON0R0,
	Index{ symbols.NT_JSON,0,1 }: JSON0R1,
	Index{ symbols.NT_JSON,0,2 }: JSON0R2,
	Index{ symbols.NT_JSON,1,0 }: JSON1F0,
	Index{ symbols.NT_LBRACE,0,0 }: LBRACE0R0,
	Index{ symbols.NT_LBRACE,0,1 }: LBRACE0R1,
	Index{ symbols.NT_LBRACE,0,2 }: LBRACE0R2,
	Index{ symbols.NT_LBRACE,1,0 }: LBRACE1F0,
	Index{ symbols.NT_LBRACKET,0,0 }: LBRACKET0R0,
	Index{ symbols.NT_LBRACKET,0,1 }: LBRACKET0R1,
	Index{ symbols.NT_LBRACKET,0,2 }: LBRACKET0R2,
	Index{ symbols.NT_LBRACKET,1,0 }: LBRACKET1F0,
	Index{ symbols.NT_Members,0,0 }: Members0R0,
	Index{ symbols.NT_Members,0,1 }: Members0R1,
	Index{ symbols.NT_Members,0,2 }: Members0R2,
	Index{ symbols.NT_Members,1,0 }: Members1F0,
	Index{ symbols.NT_NUL,0,0 }: NUL0R0,
	Index{ symbols.NT_NUL,0,1 }: NUL0R1,
	Index{ symbols.NT_NUL,0,2 }: NUL0R2,
	Index{ symbols.NT_NUL,1,0 }: NUL1F0,
	Index{ symbols.NT_Neg,0,0 }: Neg0R0,
	Index{ symbols.NT_Neg,0,1 }: Neg0R1,
	Index{ symbols.NT_Neg,1,0 }: Neg1F0,
	Index{ symbols.NT_NumSeq,0,0 }: NumSeq0R0,
	Index{ symbols.NT_NumSeq,0,1 }: NumSeq0R1,
	Index{ symbols.NT_NumSeq,0,2 }: NumSeq0R2,
	Index{ symbols.NT_NumSeq,1,0 }: NumSeq1F0,
	Index{ symbols.NT_Number,0,0 }: Number0R0,
	Index{ symbols.NT_Number,0,1 }: Number0R1,
	Index{ symbols.NT_Number,0,2 }: Number0R2,
	Index{ symbols.NT_Number,0,3 }: Number0R3,
	Index{ symbols.NT_Number,0,4 }: Number0R4,
	Index{ symbols.NT_Number,1,0 }: Number1F0,
	Index{ symbols.NT_Object,0,0 }: Object0R0,
	Index{ symbols.NT_Object,0,1 }: Object0R1,
	Index{ symbols.NT_Object,0,2 }: Object0R2,
	Index{ symbols.NT_Object,0,3 }: Object0R3,
	Index{ symbols.NT_Object,1,0 }: Object1F0,
	Index{ symbols.NT_Pair,0,0 }: Pair0R0,
	Index{ symbols.NT_Pair,0,1 }: Pair0R1,
	Index{ symbols.NT_Pair,0,2 }: Pair0R2,
	Index{ symbols.NT_Pair,0,3 }: Pair0R3,
	Index{ symbols.NT_Pair,1,0 }: Pair1F0,
	Index{ symbols.NT_PlusORMinus,0,0 }: PlusORMinus0R0,
	Index{ symbols.NT_PlusORMinus,0,1 }: PlusORMinus0R1,
	Index{ symbols.NT_PlusORMinus,1,0 }: PlusORMinus1M0,
	Index{ symbols.NT_PlusORMinus,1,0 }: PlusORMinus1R0,
	Index{ symbols.NT_PlusORMinus,1,1 }: PlusORMinus1R1,
	Index{ symbols.NT_PlusORMinus,2,0 }: PlusORMinus2F0,
	Index{ symbols.NT_RBRACE,0,0 }: RBRACE0R0,
	Index{ symbols.NT_RBRACE,0,1 }: RBRACE0R1,
	Index{ symbols.NT_RBRACE,0,2 }: RBRACE0R2,
	Index{ symbols.NT_RBRACE,1,0 }: RBRACE1F0,
	Index{ symbols.NT_RBRACKET,0,0 }: RBRACKET0R0,
	Index{ symbols.NT_RBRACKET,0,1 }: RBRACKET0R1,
	Index{ symbols.NT_RBRACKET,0,2 }: RBRACKET0R2,
	Index{ symbols.NT_RBRACKET,1,0 }: RBRACKET1F0,
	Index{ symbols.NT_String,0,0 }: String0R0,
	Index{ symbols.NT_String,0,1 }: String0R1,
	Index{ symbols.NT_String,0,2 }: String0R2,
	Index{ symbols.NT_String,0,3 }: String0R3,
	Index{ symbols.NT_String,0,4 }: String0R4,
	Index{ symbols.NT_String,1,0 }: String1F0,
	Index{ symbols.NT_Suff1xchar,0,0 }: Suff1xchar0R0,
	Index{ symbols.NT_Suff1xchar,0,1 }: Suff1xchar0R1,
	Index{ symbols.NT_Suff1xchar,0,2 }: Suff1xchar0R2,
	Index{ symbols.NT_Suff1xchar,1,0 }: Suff1xchar1F0,
	Index{ symbols.NT_SuffCHAR,0,0 }: SuffCHAR0R0,
	Index{ symbols.NT_SuffCHAR,0,1 }: SuffCHAR0R1,
	Index{ symbols.NT_SuffCHAR,0,2 }: SuffCHAR0R2,
	Index{ symbols.NT_SuffCHAR,1,0 }: SuffCHAR1R0,
	Index{ symbols.NT_SuffComPair,0,0 }: SuffComPair0R0,
	Index{ symbols.NT_SuffComPair,0,1 }: SuffComPair0R1,
	Index{ symbols.NT_SuffComPair,0,2 }: SuffComPair0R2,
	Index{ symbols.NT_SuffComPair,1,0 }: SuffComPair1R0,
	Index{ symbols.NT_SuffComVal,0,0 }: SuffComVal0R0,
	Index{ symbols.NT_SuffComVal,0,1 }: SuffComVal0R1,
	Index{ symbols.NT_SuffComVal,0,2 }: SuffComVal0R2,
	Index{ symbols.NT_SuffComVal,1,0 }: SuffComVal1R0,
	Index{ symbols.NT_SuffEXP,0,0 }: SuffEXP0R0,
	Index{ symbols.NT_SuffEXP,0,1 }: SuffEXP0R1,
	Index{ symbols.NT_SuffEXP,1,0 }: SuffEXP1R0,
	Index{ symbols.NT_SuffElements,0,0 }: SuffElements0R0,
	Index{ symbols.NT_SuffElements,0,1 }: SuffElements0R1,
	Index{ symbols.NT_SuffElements,1,0 }: SuffElements1R0,
	Index{ symbols.NT_SuffFRAC,0,0 }: SuffFRAC0R0,
	Index{ symbols.NT_SuffFRAC,0,1 }: SuffFRAC0R1,
	Index{ symbols.NT_SuffFRAC,1,0 }: SuffFRAC1R0,
	Index{ symbols.NT_SuffMembers,0,0 }: SuffMembers0R0,
	Index{ symbols.NT_SuffMembers,0,1 }: SuffMembers0R1,
	Index{ symbols.NT_SuffMembers,1,0 }: SuffMembers1R0,
	Index{ symbols.NT_SuffNeg,0,0 }: SuffNeg0R0,
	Index{ symbols.NT_SuffNeg,0,1 }: SuffNeg0R1,
	Index{ symbols.NT_SuffNeg,1,0 }: SuffNeg1R0,
	Index{ symbols.NT_SuffPlusORMinus,0,0 }: SuffPlusORMinus0R0,
	Index{ symbols.NT_SuffPlusORMinus,0,1 }: SuffPlusORMinus0R1,
	Index{ symbols.NT_SuffPlusORMinus,1,0 }: SuffPlusORMinus1R0,
	Index{ symbols.NT_Suffchar,0,0 }: Suffchar0R0,
	Index{ symbols.NT_Suffchar,0,1 }: Suffchar0R1,
	Index{ symbols.NT_Suffchar,0,2 }: Suffchar0R2,
	Index{ symbols.NT_Suffchar,1,0 }: Suffchar1R0,
	Index{ symbols.NT_Suffnum,0,0 }: Suffnum0R0,
	Index{ symbols.NT_Suffnum,0,1 }: Suffnum0R1,
	Index{ symbols.NT_Suffnum,0,2 }: Suffnum0R2,
	Index{ symbols.NT_Suffnum,1,0 }: Suffnum1R0,
	Index{ symbols.NT_TRUE,0,0 }: TRUE0R0,
	Index{ symbols.NT_TRUE,0,1 }: TRUE0R1,
	Index{ symbols.NT_TRUE,0,2 }: TRUE0R2,
	Index{ symbols.NT_TRUE,1,0 }: TRUE1F0,
	Index{ symbols.NT_Value,0,0 }: Value0R0,
	Index{ symbols.NT_Value,0,1 }: Value0R1,
	Index{ symbols.NT_Value,1,0 }: Value1R0,
	Index{ symbols.NT_Value,1,1 }: Value1R1,
	Index{ symbols.NT_Value,2,0 }: Value2R0,
	Index{ symbols.NT_Value,2,1 }: Value2R1,
	Index{ symbols.NT_Value,3,0 }: Value3R0,
	Index{ symbols.NT_Value,3,1 }: Value3R1,
	Index{ symbols.NT_Value,4,0 }: Value4R0,
	Index{ symbols.NT_Value,4,1 }: Value4R1,
	Index{ symbols.NT_Value,5,0 }: Value5R0,
	Index{ symbols.NT_Value,5,1 }: Value5R1,
	Index{ symbols.NT_Value,6,0 }: Value6R0,
	Index{ symbols.NT_Value,6,1 }: Value6R1,
	Index{ symbols.NT_Value,7,0 }: Value7F0,
	Index{ symbols.NT_WS,0,0 }: WS0R0,
	Index{ symbols.NT_WS,0,1 }: WS0R1,
	Index{ symbols.NT_WS,0,2 }: WS0R2,
	Index{ symbols.NT_WS,1,0 }: WS1R0,
}

var alternates = map[symbols.NT][]Label{ 
	symbols.NT_JSON:[]Label{ JSON0R0 },
	symbols.NT_Object:[]Label{ Object0R0 },
	symbols.NT_Members:[]Label{ Members0R0 },
	symbols.NT_ComPair:[]Label{ ComPair0R0 },
	symbols.NT_Pair:[]Label{ Pair0R0 },
	symbols.NT_Array:[]Label{ Array0R0 },
	symbols.NT_Elements:[]Label{ Elements0R0 },
	symbols.NT_ComVal:[]Label{ ComVal0R0 },
	symbols.NT_Value:[]Label{ Value0R0,Value1R0,Value2R0,Value3R0,Value4R0,Value5R0,Value6R0 },
	symbols.NT_String:[]Label{ String0R0 },
	symbols.NT_CHAR:[]Label{ CHAR0R0,CHAR1R0 },
	symbols.NT_CharCode:[]Label{ CharCode0R0,CharCode1R0 },
	symbols.NT_Number:[]Label{ Number0R0 },
	symbols.NT_INT:[]Label{ INT0R0 },
	symbols.NT_Neg:[]Label{ Neg0R0 },
	symbols.NT_Integers:[]Label{ Integers0R0,Integers1R0 },
	symbols.NT_NumSeq:[]Label{ NumSeq0R0 },
	symbols.NT_FRAC:[]Label{ FRAC0R0 },
	symbols.NT_EXP:[]Label{ EXP0R0 },
	symbols.NT_PlusORMinus:[]Label{ PlusORMinus0R0,PlusORMinus1R0 },
	symbols.NT_TRUE:[]Label{ TRUE0R0 },
	symbols.NT_FALSE:[]Label{ FALSE0R0 },
	symbols.NT_NUL:[]Label{ NUL0R0 },
	symbols.NT_COMMA:[]Label{ COMMA0R0 },
	symbols.NT_COLON:[]Label{ COLON0R0 },
	symbols.NT_LBRACE:[]Label{ LBRACE0R0 },
	symbols.NT_RBRACE:[]Label{ RBRACE0R0 },
	symbols.NT_LBRACKET:[]Label{ LBRACKET0R0 },
	symbols.NT_RBRACKET:[]Label{ RBRACKET0R0 },
	symbols.NT_WS:[]Label{ WS0R0,WS1R0 },
	symbols.NT_EscOrComment:[]Label{ EscOrComment0R0,EscOrComment1R0,EscOrComment2R0,EscOrComment3R0 },
	symbols.NT_SuffMembers:[]Label{ SuffMembers0R0,SuffMembers1R0 },
	symbols.NT_SuffComPair:[]Label{ SuffComPair0R0,SuffComPair1R0 },
	symbols.NT_SuffElements:[]Label{ SuffElements0R0,SuffElements1R0 },
	symbols.NT_SuffComVal:[]Label{ SuffComVal0R0,SuffComVal1R0 },
	symbols.NT_SuffCHAR:[]Label{ SuffCHAR0R0,SuffCHAR1R0 },
	symbols.NT_Suff1xchar:[]Label{ Suff1xchar0R0 },
	symbols.NT_Suffchar:[]Label{ Suffchar0R0,Suffchar1R0 },
	symbols.NT_SuffFRAC:[]Label{ SuffFRAC0R0,SuffFRAC1R0 },
	symbols.NT_SuffEXP:[]Label{ SuffEXP0R0,SuffEXP1R0 },
	symbols.NT_SuffNeg:[]Label{ SuffNeg0R0,SuffNeg1R0 },
	symbols.NT_Suffnum:[]Label{ Suffnum0R0,Suffnum1R0 },
	symbols.NT_SuffPlusORMinus:[]Label{ SuffPlusORMinus0R0,SuffPlusORMinus1R0 },
}

var nullable = []bool { 
	false, // Array0R0 
	false, // Array0R1 
	false, // Array0R2 
	true, // Array0R3 
	false, // Array1F0 
	false, // CHAR0R0 
	true, // CHAR0R1 
	true, // CHAR0R2 
	false, // CHAR1R0 
	false, // CHAR1R1 
	true, // CHAR1R2 
	false, // CHAR2F0 
	false, // COLON0R0 
	true, // COLON0R1 
	true, // COLON0R2 
	false, // COLON1F0 
	false, // COMMA0R0 
	true, // COMMA0R1 
	true, // COMMA0R2 
	false, // COMMA1F0 
	false, // CharCode0R0 
	true, // CharCode0R1 
	false, // CharCode1R0 
	false, // CharCode1R1 
	false, // CharCode1R2 
	false, // CharCode1R3 
	false, // CharCode1R4 
	true, // CharCode1R5 
	false, // CharCode2F0 
	false, // ComPair0R0 
	false, // ComPair0R1 
	true, // ComPair0R2 
	false, // ComPair1F0 
	false, // ComVal0R0 
	false, // ComVal0R1 
	true, // ComVal0R2 
	false, // ComVal1F0 
	false, // EXP0R0 
	false, // EXP0R1 
	false, // EXP0R2 
	true, // EXP0R3 
	false, // EXP1F0 
	false, // Elements0R0 
	true, // Elements0R1 
	true, // Elements0R2 
	false, // Elements1F0 
	false, // EscOrComment0R0 
	true, // EscOrComment0R1 
	false, // EscOrComment1R0 
	true, // EscOrComment1R1 
	false, // EscOrComment2R0 
	true, // EscOrComment2R1 
	true, // EscOrComment3R0 
	false, // FALSE0R0 
	true, // FALSE0R1 
	true, // FALSE0R2 
	false, // FALSE1F0 
	false, // FRAC0R0 
	true, // FRAC0R1 
	true, // FRAC0R2 
	false, // FRAC1F0 
	false, // INT0R0 
	false, // INT0R1 
	true, // INT0R2 
	false, // INT1F0 
	false, // Integers0R0 
	true, // Integers0R1 
	false, // Integers1R0 
	true, // Integers1R1 
	false, // Integers2F0 
	false, // JSON0R0 
	false, // JSON0R1 
	true, // JSON0R2 
	false, // JSON1F0 
	false, // LBRACE0R0 
	true, // LBRACE0R1 
	true, // LBRACE0R2 
	false, // LBRACE1F0 
	false, // LBRACKET0R0 
	true, // LBRACKET0R1 
	true, // LBRACKET0R2 
	false, // LBRACKET1F0 
	false, // Members0R0 
	true, // Members0R1 
	true, // Members0R2 
	false, // Members1F0 
	false, // NUL0R0 
	true, // NUL0R1 
	true, // NUL0R2 
	false, // NUL1F0 
	false, // Neg0R0 
	true, // Neg0R1 
	false, // Neg1F0 
	false, // NumSeq0R0 
	true, // NumSeq0R1 
	true, // NumSeq0R2 
	false, // NumSeq1F0 
	false, // Number0R0 
	true, // Number0R1 
	true, // Number0R2 
	true, // Number0R3 
	true, // Number0R4 
	false, // Number1F0 
	false, // Object0R0 
	false, // Object0R1 
	false, // Object0R2 
	true, // Object0R3 
	false, // Object1F0 
	false, // Pair0R0 
	false, // Pair0R1 
	false, // Pair0R2 
	true, // Pair0R3 
	false, // Pair1F0 
	false, // PlusORMinus0R0 
	true, // PlusORMinus0R1 
	false, // PlusORMinus1M0 
	false, // PlusORMinus1R0 
	true, // PlusORMinus1R1 
	false, // PlusORMinus2F0 
	false, // RBRACE0R0 
	true, // RBRACE0R1 
	true, // RBRACE0R2 
	false, // RBRACE1F0 
	false, // RBRACKET0R0 
	true, // RBRACKET0R1 
	true, // RBRACKET0R2 
	false, // RBRACKET1F0 
	false, // String0R0 
	false, // String0R1 
	false, // String0R2 
	true, // String0R3 
	true, // String0R4 
	false, // String1F0 
	false, // Suff1xchar0R0 
	true, // Suff1xchar0R1 
	true, // Suff1xchar0R2 
	false, // Suff1xchar1F0 
	false, // SuffCHAR0R0 
	true, // SuffCHAR0R1 
	true, // SuffCHAR0R2 
	true, // SuffCHAR1R0 
	false, // SuffComPair0R0 
	true, // SuffComPair0R1 
	true, // SuffComPair0R2 
	true, // SuffComPair1R0 
	false, // SuffComVal0R0 
	true, // SuffComVal0R1 
	true, // SuffComVal0R2 
	true, // SuffComVal1R0 
	false, // SuffEXP0R0 
	true, // SuffEXP0R1 
	true, // SuffEXP1R0 
	false, // SuffElements0R0 
	true, // SuffElements0R1 
	true, // SuffElements1R0 
	false, // SuffFRAC0R0 
	true, // SuffFRAC0R1 
	true, // SuffFRAC1R0 
	false, // SuffMembers0R0 
	true, // SuffMembers0R1 
	true, // SuffMembers1R0 
	false, // SuffNeg0R0 
	true, // SuffNeg0R1 
	true, // SuffNeg1R0 
	false, // SuffPlusORMinus0R0 
	true, // SuffPlusORMinus0R1 
	true, // SuffPlusORMinus1R0 
	false, // Suffchar0R0 
	true, // Suffchar0R1 
	true, // Suffchar0R2 
	true, // Suffchar1R0 
	false, // Suffnum0R0 
	true, // Suffnum0R1 
	true, // Suffnum0R2 
	true, // Suffnum1R0 
	false, // TRUE0R0 
	true, // TRUE0R1 
	true, // TRUE0R2 
	false, // TRUE1F0 
	false, // Value0R0 
	true, // Value0R1 
	false, // Value1R0 
	true, // Value1R1 
	false, // Value2R0 
	true, // Value2R1 
	false, // Value3R0 
	true, // Value3R1 
	false, // Value4R0 
	true, // Value4R1 
	false, // Value5R0 
	true, // Value5R1 
	false, // Value6R0 
	true, // Value6R1 
	false, // Value7F0 
	true, // WS0R0 
	true, // WS0R1 
	true, // WS0R2 
	true, // WS1R0 
}

var firstT = []map[token.Type]bool { 
	{  token.T_6: true,  }, // Array0R0 
	{  token.T_19: true,  token.T_11: true,  token.T_2: true,  token.T_4: true,  token.T_15: true,  token.T_6: true,  token.T_23: true,  token.T_18: true,  token.T_21: true,  token.T_7: true,  }, // Array0R1 
	{  token.T_7: true,  }, // Array0R2 
	{  }, // Array0R3 
	{  }, // Array1F0 
	{  token.T_10: true,  }, // CHAR0R0 
	{  token.T_10: true,  }, // CHAR0R1 
	{  }, // CHAR0R2 
	{  token.T_8: true,  }, // CHAR1R0 
	{  token.T_13: true,  token.T_22: true,  }, // CHAR1R1 
	{  }, // CHAR1R2 
	{  }, // CHAR2F0 
	{  token.T_5: true,  }, // COLON0R0 
	{  token.T_9: true,  token.T_14: true,  token.T_17: true,  }, // COLON0R1 
	{  }, // COLON0R2 
	{  }, // COLON1F0 
	{  token.T_1: true,  }, // COMMA0R0 
	{  token.T_14: true,  token.T_17: true,  token.T_9: true,  }, // COMMA0R1 
	{  }, // COMMA0R2 
	{  }, // COMMA1F0 
	{  token.T_13: true,  }, // CharCode0R0 
	{  }, // CharCode0R1 
	{  token.T_22: true,  }, // CharCode1R0 
	{  token.T_16: true,  }, // CharCode1R1 
	{  token.T_16: true,  }, // CharCode1R2 
	{  token.T_16: true,  }, // CharCode1R3 
	{  token.T_16: true,  }, // CharCode1R4 
	{  }, // CharCode1R5 
	{  }, // CharCode2F0 
	{  token.T_1: true,  }, // ComPair0R0 
	{  token.T_11: true,  }, // ComPair0R1 
	{  }, // ComPair0R2 
	{  }, // ComPair1F0 
	{  token.T_1: true,  }, // ComVal0R0 
	{  token.T_15: true,  token.T_11: true,  token.T_6: true,  token.T_19: true,  token.T_23: true,  token.T_21: true,  token.T_18: true,  token.T_4: true,  token.T_2: true,  }, // ComVal0R1 
	{  }, // ComVal0R2 
	{  }, // ComVal1F0 
	{  token.T_12: true,  }, // EXP0R0 
	{  token.T_0: true,  token.T_2: true,  token.T_20: true,  }, // EXP0R1 
	{  token.T_20: true,  }, // EXP0R2 
	{  }, // EXP0R3 
	{  }, // EXP1F0 
	{  token.T_6: true,  token.T_19: true,  token.T_11: true,  token.T_18: true,  token.T_23: true,  token.T_2: true,  token.T_4: true,  token.T_21: true,  token.T_15: true,  }, // Elements0R0 
	{  token.T_1: true,  }, // Elements0R1 
	{  }, // Elements0R2 
	{  }, // Elements1F0 
	{  token.T_14: true,  }, // EscOrComment0R0 
	{  }, // EscOrComment0R1 
	{  token.T_17: true,  }, // EscOrComment1R0 
	{  }, // EscOrComment1R1 
	{  token.T_9: true,  }, // EscOrComment2R0 
	{  }, // EscOrComment2R1 
	{  }, // EscOrComment3R0 
	{  token.T_15: true,  }, // FALSE0R0 
	{  token.T_14: true,  token.T_17: true,  token.T_9: true,  }, // FALSE0R1 
	{  }, // FALSE0R2 
	{  }, // FALSE1F0 
	{  token.T_3: true,  }, // FRAC0R0 
	{  token.T_20: true,  }, // FRAC0R1 
	{  }, // FRAC0R2 
	{  }, // FRAC1F0 
	{  token.T_2: true,  token.T_18: true,  token.T_4: true,  }, // INT0R0 
	{  token.T_4: true,  token.T_18: true,  }, // INT0R1 
	{  }, // INT0R2 
	{  }, // INT1F0 
	{  token.T_18: true,  }, // Integers0R0 
	{  }, // Integers0R1 
	{  token.T_4: true,  }, // Integers1R0 
	{  }, // Integers1R1 
	{  }, // Integers2F0 
	{  token.T_9: true,  token.T_23: true,  token.T_14: true,  token.T_17: true,  }, // JSON0R0 
	{  token.T_23: true,  }, // JSON0R1 
	{  }, // JSON0R2 
	{  }, // JSON1F0 
	{  token.T_23: true,  }, // LBRACE0R0 
	{  token.T_9: true,  token.T_14: true,  token.T_17: true,  }, // LBRACE0R1 
	{  }, // LBRACE0R2 
	{  }, // LBRACE1F0 
	{  token.T_6: true,  }, // LBRACKET0R0 
	{  token.T_14: true,  token.T_17: true,  token.T_9: true,  }, // LBRACKET0R1 
	{  }, // LBRACKET0R2 
	{  }, // LBRACKET1F0 
	{  token.T_11: true,  }, // Members0R0 
	{  token.T_1: true,  }, // Members0R1 
	{  }, // Members0R2 
	{  }, // Members1F0 
	{  token.T_19: true,  }, // NUL0R0 
	{  token.T_17: true,  token.T_9: true,  token.T_14: true,  }, // NUL0R1 
	{  }, // NUL0R2 
	{  }, // NUL1F0 
	{  token.T_2: true,  }, // Neg0R0 
	{  }, // Neg0R1 
	{  }, // Neg1F0 
	{  token.T_18: true,  }, // NumSeq0R0 
	{  token.T_20: true,  }, // NumSeq0R1 
	{  }, // NumSeq0R2 
	{  }, // NumSeq1F0 
	{  token.T_2: true,  token.T_18: true,  token.T_4: true,  }, // Number0R0 
	{  token.T_12: true,  token.T_14: true,  token.T_17: true,  token.T_9: true,  token.T_3: true,  }, // Number0R1 
	{  token.T_9: true,  token.T_14: true,  token.T_17: true,  token.T_12: true,  }, // Number0R2 
	{  token.T_9: true,  token.T_14: true,  token.T_17: true,  }, // Number0R3 
	{  }, // Number0R4 
	{  }, // Number1F0 
	{  token.T_23: true,  }, // Object0R0 
	{  token.T_11: true,  token.T_24: true,  }, // Object0R1 
	{  token.T_24: true,  }, // Object0R2 
	{  }, // Object0R3 
	{  }, // Object1F0 
	{  token.T_11: true,  }, // Pair0R0 
	{  token.T_5: true,  }, // Pair0R1 
	{  token.T_4: true,  token.T_21: true,  token.T_15: true,  token.T_23: true,  token.T_11: true,  token.T_18: true,  token.T_2: true,  token.T_6: true,  token.T_19: true,  }, // Pair0R2 
	{  }, // Pair0R3 
	{  }, // Pair1F0 
	{  token.T_0: true,  }, // PlusORMinus0R0 
	{  }, // PlusORMinus0R1 
	{  token.T_2: true,  }, // PlusORMinus1M0 
	{  token.T_2: true,  }, // PlusORMinus1R0 
	{  }, // PlusORMinus1R1 
	{  }, // PlusORMinus2F0 
	{  token.T_24: true,  }, // RBRACE0R0 
	{  token.T_14: true,  token.T_17: true,  token.T_9: true,  }, // RBRACE0R1 
	{  }, // RBRACE0R2 
	{  }, // RBRACE1F0 
	{  token.T_7: true,  }, // RBRACKET0R0 
	{  token.T_14: true,  token.T_17: true,  token.T_9: true,  }, // RBRACKET0R1 
	{  }, // RBRACKET0R2 
	{  }, // RBRACKET1F0 
	{  token.T_11: true,  }, // String0R0 
	{  token.T_10: true,  token.T_8: true,  token.T_11: true,  }, // String0R1 
	{  token.T_11: true,  }, // String0R2 
	{  token.T_14: true,  token.T_17: true,  token.T_9: true,  }, // String0R3 
	{  }, // String0R4 
	{  }, // String1F0 
	{  token.T_10: true,  }, // Suff1xchar0R0 
	{  token.T_10: true,  }, // Suff1xchar0R1 
	{  }, // Suff1xchar0R2 
	{  }, // Suff1xchar1F0 
	{  token.T_10: true,  token.T_8: true,  }, // SuffCHAR0R0 
	{  token.T_10: true,  token.T_8: true,  }, // SuffCHAR0R1 
	{  }, // SuffCHAR0R2 
	{  }, // SuffCHAR1R0 
	{  token.T_1: true,  }, // SuffComPair0R0 
	{  token.T_1: true,  }, // SuffComPair0R1 
	{  }, // SuffComPair0R2 
	{  }, // SuffComPair1R0 
	{  token.T_1: true,  }, // SuffComVal0R0 
	{  token.T_1: true,  }, // SuffComVal0R1 
	{  }, // SuffComVal0R2 
	{  }, // SuffComVal1R0 
	{  token.T_12: true,  }, // SuffEXP0R0 
	{  }, // SuffEXP0R1 
	{  }, // SuffEXP1R0 
	{  token.T_6: true,  token.T_4: true,  token.T_19: true,  token.T_18: true,  token.T_23: true,  token.T_15: true,  token.T_11: true,  token.T_21: true,  token.T_2: true,  }, // SuffElements0R0 
	{  }, // SuffElements0R1 
	{  }, // SuffElements1R0 
	{  token.T_3: true,  }, // SuffFRAC0R0 
	{  }, // SuffFRAC0R1 
	{  }, // SuffFRAC1R0 
	{  token.T_11: true,  }, // SuffMembers0R0 
	{  }, // SuffMembers0R1 
	{  }, // SuffMembers1R0 
	{  token.T_2: true,  }, // SuffNeg0R0 
	{  }, // SuffNeg0R1 
	{  }, // SuffNeg1R0 
	{  token.T_0: true,  token.T_2: true,  }, // SuffPlusORMinus0R0 
	{  }, // SuffPlusORMinus0R1 
	{  }, // SuffPlusORMinus1R0 
	{  token.T_10: true,  }, // Suffchar0R0 
	{  token.T_10: true,  }, // Suffchar0R1 
	{  }, // Suffchar0R2 
	{  }, // Suffchar1R0 
	{  token.T_20: true,  }, // Suffnum0R0 
	{  token.T_20: true,  }, // Suffnum0R1 
	{  }, // Suffnum0R2 
	{  }, // Suffnum1R0 
	{  token.T_21: true,  }, // TRUE0R0 
	{  token.T_17: true,  token.T_9: true,  token.T_14: true,  }, // TRUE0R1 
	{  }, // TRUE0R2 
	{  }, // TRUE1F0 
	{  token.T_11: true,  }, // Value0R0 
	{  }, // Value0R1 
	{  token.T_18: true,  token.T_4: true,  token.T_2: true,  }, // Value1R0 
	{  }, // Value1R1 
	{  token.T_23: true,  }, // Value2R0 
	{  }, // Value2R1 
	{  token.T_6: true,  }, // Value3R0 
	{  }, // Value3R1 
	{  token.T_21: true,  }, // Value4R0 
	{  }, // Value4R1 
	{  token.T_15: true,  }, // Value5R0 
	{  }, // Value5R1 
	{  token.T_19: true,  }, // Value6R0 
	{  }, // Value6R1 
	{  }, // Value7F0 
	{  token.T_17: true,  token.T_9: true,  token.T_14: true,  }, // WS0R0 
	{  token.T_14: true,  token.T_17: true,  token.T_9: true,  }, // WS0R1 
	{  }, // WS0R2 
	{  }, // WS1R0 
}
